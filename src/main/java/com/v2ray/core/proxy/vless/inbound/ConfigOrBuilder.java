// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/vless/inbound/config.proto

package com.v2ray.core.proxy.vless.inbound;

public interface ConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.vless.inbound.Config)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .v2ray.core.common.protocol.User clients = 1;</code>
   */
  java.util.List<com.v2ray.core.common.protocol.User> 
      getClientsList();
  /**
   * <code>repeated .v2ray.core.common.protocol.User clients = 1;</code>
   */
  com.v2ray.core.common.protocol.User getClients(int index);
  /**
   * <code>repeated .v2ray.core.common.protocol.User clients = 1;</code>
   */
  int getClientsCount();
  /**
   * <code>repeated .v2ray.core.common.protocol.User clients = 1;</code>
   */
  java.util.List<? extends com.v2ray.core.common.protocol.UserOrBuilder> 
      getClientsOrBuilderList();
  /**
   * <code>repeated .v2ray.core.common.protocol.User clients = 1;</code>
   */
  com.v2ray.core.common.protocol.UserOrBuilder getClientsOrBuilder(
      int index);

  /**
   * <pre>
   * Decryption settings. Only applies to server side, and only accepts "none"
   * for now.
   * </pre>
   *
   * <code>string decryption = 2;</code>
   * @return The decryption.
   */
  java.lang.String getDecryption();
  /**
   * <pre>
   * Decryption settings. Only applies to server side, and only accepts "none"
   * for now.
   * </pre>
   *
   * <code>string decryption = 2;</code>
   * @return The bytes for decryption.
   */
  com.google.protobuf.ByteString
      getDecryptionBytes();

  /**
   * <code>repeated .v2ray.core.proxy.vless.inbound.Fallback fallbacks = 3;</code>
   */
  java.util.List<com.v2ray.core.proxy.vless.inbound.Fallback> 
      getFallbacksList();
  /**
   * <code>repeated .v2ray.core.proxy.vless.inbound.Fallback fallbacks = 3;</code>
   */
  com.v2ray.core.proxy.vless.inbound.Fallback getFallbacks(int index);
  /**
   * <code>repeated .v2ray.core.proxy.vless.inbound.Fallback fallbacks = 3;</code>
   */
  int getFallbacksCount();
  /**
   * <code>repeated .v2ray.core.proxy.vless.inbound.Fallback fallbacks = 3;</code>
   */
  java.util.List<? extends com.v2ray.core.proxy.vless.inbound.FallbackOrBuilder> 
      getFallbacksOrBuilderList();
  /**
   * <code>repeated .v2ray.core.proxy.vless.inbound.Fallback fallbacks = 3;</code>
   */
  com.v2ray.core.proxy.vless.inbound.FallbackOrBuilder getFallbacksOrBuilder(
      int index);
}
