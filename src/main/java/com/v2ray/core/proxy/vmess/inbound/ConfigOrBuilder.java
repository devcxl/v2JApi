// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/vmess/inbound/config.proto

package com.v2ray.core.proxy.vmess.inbound;

public interface ConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.vmess.inbound.Config)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .v2ray.core.common.protocol.User user = 1;</code>
   */
  java.util.List<com.v2ray.core.common.protocol.User> 
      getUserList();
  /**
   * <code>repeated .v2ray.core.common.protocol.User user = 1;</code>
   */
  com.v2ray.core.common.protocol.User getUser(int index);
  /**
   * <code>repeated .v2ray.core.common.protocol.User user = 1;</code>
   */
  int getUserCount();
  /**
   * <code>repeated .v2ray.core.common.protocol.User user = 1;</code>
   */
  java.util.List<? extends com.v2ray.core.common.protocol.UserOrBuilder> 
      getUserOrBuilderList();
  /**
   * <code>repeated .v2ray.core.common.protocol.User user = 1;</code>
   */
  com.v2ray.core.common.protocol.UserOrBuilder getUserOrBuilder(
      int index);

  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DefaultConfig default = 2;</code>
   * @return Whether the default field is set.
   */
  boolean hasDefault();
  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DefaultConfig default = 2;</code>
   * @return The default.
   */
  com.v2ray.core.proxy.vmess.inbound.DefaultConfig getDefault();
  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DefaultConfig default = 2;</code>
   */
  com.v2ray.core.proxy.vmess.inbound.DefaultConfigOrBuilder getDefaultOrBuilder();

  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DetourConfig detour = 3;</code>
   * @return Whether the detour field is set.
   */
  boolean hasDetour();
  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DetourConfig detour = 3;</code>
   * @return The detour.
   */
  com.v2ray.core.proxy.vmess.inbound.DetourConfig getDetour();
  /**
   * <code>.v2ray.core.proxy.vmess.inbound.DetourConfig detour = 3;</code>
   */
  com.v2ray.core.proxy.vmess.inbound.DetourConfigOrBuilder getDetourOrBuilder();

  /**
   * <code>bool secure_encryption_only = 4;</code>
   * @return The secureEncryptionOnly.
   */
  boolean getSecureEncryptionOnly();
}
