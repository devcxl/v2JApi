// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/shadowsocks/config.proto

package com.v2ray.core.proxy.shadowsocks;

public interface ServerConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.shadowsocks.ServerConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * UdpEnabled specified whether or not to enable UDP for Shadowsocks.
   * Deprecated. Use 'network' field.
   * </pre>
   *
   * <code>bool udp_enabled = 1 [deprecated = true];</code>
   * @deprecated v2ray.core.proxy.shadowsocks.ServerConfig.udp_enabled is deprecated.
   *     See proxy/shadowsocks/config.proto;l=30
   * @return The udpEnabled.
   */
  @java.lang.Deprecated boolean getUdpEnabled();

  /**
   * <code>.v2ray.core.common.protocol.User user = 2;</code>
   * @return Whether the user field is set.
   */
  boolean hasUser();
  /**
   * <code>.v2ray.core.common.protocol.User user = 2;</code>
   * @return The user.
   */
  com.v2ray.core.common.protocol.User getUser();
  /**
   * <code>.v2ray.core.common.protocol.User user = 2;</code>
   */
  com.v2ray.core.common.protocol.UserOrBuilder getUserOrBuilder();

  /**
   * <code>repeated .v2ray.core.common.net.Network network = 3;</code>
   * @return A list containing the network.
   */
  java.util.List<com.v2ray.core.common.net.Network> getNetworkList();
  /**
   * <code>repeated .v2ray.core.common.net.Network network = 3;</code>
   * @return The count of network.
   */
  int getNetworkCount();
  /**
   * <code>repeated .v2ray.core.common.net.Network network = 3;</code>
   * @param index The index of the element to return.
   * @return The network at the given index.
   */
  com.v2ray.core.common.net.Network getNetwork(int index);
  /**
   * <code>repeated .v2ray.core.common.net.Network network = 3;</code>
   * @return A list containing the enum numeric values on the wire for network.
   */
  java.util.List<java.lang.Integer>
  getNetworkValueList();
  /**
   * <code>repeated .v2ray.core.common.net.Network network = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of network at the given index.
   */
  int getNetworkValue(int index);
}
