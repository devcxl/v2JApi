// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/freedom/config.proto

package com.v2ray.core.proxy.freedom;

public final class ConfigOuterClass {
  private ConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_proxy_freedom_DestinationOverride_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_proxy_freedom_Config_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_proxy_freedom_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032proxy/freedom/config.proto\022\030v2ray.core" +
      ".proxy.freedom\032!common/protocol/server_s" +
      "pec.proto\"Q\n\023DestinationOverride\022:\n\006serv" +
      "er\030\001 \001(\0132*.v2ray.core.common.protocol.Se" +
      "rverEndpoint\"\213\002\n\006Config\022H\n\017domain_strate" +
      "gy\030\001 \001(\0162/.v2ray.core.proxy.freedom.Conf" +
      "ig.DomainStrategy\022\023\n\007timeout\030\002 \001(\rB\002\030\001\022K" +
      "\n\024destination_override\030\003 \001(\0132-.v2ray.cor" +
      "e.proxy.freedom.DestinationOverride\022\022\n\nu" +
      "ser_level\030\004 \001(\r\"A\n\016DomainStrategy\022\t\n\005AS_" +
      "IS\020\000\022\n\n\006USE_IP\020\001\022\013\n\007USE_IP4\020\002\022\013\n\007USE_IP6" +
      "\020\003Bi\n\034com.v2ray.core.proxy.freedomP\001Z,gi" +
      "thub.com/v2fly/v2ray-core/v4/proxy/freed" +
      "om\252\002\030V2Ray.Core.Proxy.Freedomb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.v2ray.core.common.protocol.ServerSpec.getDescriptor(),
        });
    internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v2ray_core_proxy_freedom_DestinationOverride_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_proxy_freedom_DestinationOverride_descriptor,
        new java.lang.String[] { "Server", });
    internal_static_v2ray_core_proxy_freedom_Config_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_v2ray_core_proxy_freedom_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_proxy_freedom_Config_descriptor,
        new java.lang.String[] { "DomainStrategy", "Timeout", "DestinationOverride", "UserLevel", });
    com.v2ray.core.common.protocol.ServerSpec.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
