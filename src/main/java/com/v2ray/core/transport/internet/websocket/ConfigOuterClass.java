// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport/internet/websocket/config.proto

package com.v2ray.core.transport.internet.websocket;

public final class ConfigOuterClass {
  private ConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_transport_internet_websocket_Header_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_transport_internet_websocket_Header_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_transport_internet_websocket_Config_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_transport_internet_websocket_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)transport/internet/websocket/config.pr" +
      "oto\022\'v2ray.core.transport.internet.webso" +
      "cket\"$\n\006Header\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\t\"\324\001\n\006Config\022\014\n\004path\030\002 \001(\t\022?\n\006header\030\003 " +
      "\003(\0132/.v2ray.core.transport.internet.webs" +
      "ocket.Header\022\035\n\025accept_proxy_protocol\030\004 " +
      "\001(\010\022\026\n\016max_early_data\030\005 \001(\005\022\036\n\026use_brows" +
      "er_forwarding\030\006 \001(\010\022\036\n\026early_data_header" +
      "_name\030\007 \001(\tJ\004\010\001\020\002B\226\001\n+com.v2ray.core.tra" +
      "nsport.internet.websocketP\001Z;github.com/" +
      "v2fly/v2ray-core/v4/transport/internet/w" +
      "ebsocket\252\002\'V2Ray.Core.Transport.Internet" +
      ".Websocketb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_v2ray_core_transport_internet_websocket_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v2ray_core_transport_internet_websocket_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_transport_internet_websocket_Header_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_v2ray_core_transport_internet_websocket_Config_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_v2ray_core_transport_internet_websocket_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_transport_internet_websocket_Config_descriptor,
        new java.lang.String[] { "Path", "Header", "AcceptProxyProtocol", "MaxEarlyData", "UseBrowserForwarding", "EarlyDataHeaderName", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
