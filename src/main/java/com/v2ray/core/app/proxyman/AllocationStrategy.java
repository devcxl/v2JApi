// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/proxyman/config.proto

package com.v2ray.core.app.proxyman;

/**
 * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy}
 */
public final class AllocationStrategy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v2ray.core.app.proxyman.AllocationStrategy)
    AllocationStrategyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AllocationStrategy.newBuilder() to construct.
  private AllocationStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllocationStrategy() {
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AllocationStrategy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.v2ray.core.app.proxyman.AllocationStrategy.class, com.v2ray.core.app.proxyman.AllocationStrategy.Builder.class);
  }

  /**
   * Protobuf enum {@code v2ray.core.app.proxyman.AllocationStrategy.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Always allocate all connection handlers.
     * </pre>
     *
     * <code>Always = 0;</code>
     */
    Always(0),
    /**
     * <pre>
     * Randomly allocate specific range of handlers.
     * </pre>
     *
     * <code>Random = 1;</code>
     */
    Random(1),
    /**
     * <pre>
     * External. Not supported yet.
     * </pre>
     *
     * <code>External = 2;</code>
     */
    External(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Always allocate all connection handlers.
     * </pre>
     *
     * <code>Always = 0;</code>
     */
    public static final int Always_VALUE = 0;
    /**
     * <pre>
     * Randomly allocate specific range of handlers.
     * </pre>
     *
     * <code>Random = 1;</code>
     */
    public static final int Random_VALUE = 1;
    /**
     * <pre>
     * External. Not supported yet.
     * </pre>
     *
     * <code>External = 2;</code>
     */
    public static final int External_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return Always;
        case 1: return Random;
        case 2: return External;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.v2ray.core.app.proxyman.AllocationStrategy.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:v2ray.core.app.proxyman.AllocationStrategy.Type)
  }

  public interface AllocationStrategyConcurrencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 value = 1;</code>
     * @return The value.
     */
    int getValue();
  }
  /**
   * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency}
   */
  public static final class AllocationStrategyConcurrency extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)
      AllocationStrategyConcurrencyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationStrategyConcurrency.newBuilder() to construct.
    private AllocationStrategyConcurrency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationStrategyConcurrency() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllocationStrategyConcurrency();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyConcurrency_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyConcurrency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.class, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>uint32 value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeUInt32(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)) {
        return super.equals(obj);
      }
      com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency other = (com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency) obj;

      if (getValue()
          != other.getValue()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyConcurrency_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyConcurrency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.class, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder.class);
      }

      // Construct using com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyConcurrency_descriptor;
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency getDefaultInstanceForType() {
        return com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.getDefaultInstance();
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency build() {
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency buildPartial() {
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency result = new com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency(this);
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency) {
          return mergeFrom((com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency other) {
        if (other == com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                value_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int value_ ;
      /**
       * <code>uint32 value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>uint32 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency)
    private static final com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency();
    }

    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationStrategyConcurrency>
        PARSER = new com.google.protobuf.AbstractParser<AllocationStrategyConcurrency>() {
      @java.lang.Override
      public AllocationStrategyConcurrency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AllocationStrategyConcurrency> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationStrategyConcurrency> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllocationStrategyRefreshOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 value = 1;</code>
     * @return The value.
     */
    int getValue();
  }
  /**
   * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh}
   */
  public static final class AllocationStrategyRefresh extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)
      AllocationStrategyRefreshOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllocationStrategyRefresh.newBuilder() to construct.
    private AllocationStrategyRefresh(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllocationStrategyRefresh() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllocationStrategyRefresh();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyRefresh_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyRefresh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.class, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>uint32 value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeUInt32(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)) {
        return super.equals(obj);
      }
      com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh other = (com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh) obj;

      if (getValue()
          != other.getValue()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyRefresh_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyRefresh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.class, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder.class);
      }

      // Construct using com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_AllocationStrategyRefresh_descriptor;
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh getDefaultInstanceForType() {
        return com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.getDefaultInstance();
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh build() {
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh buildPartial() {
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh result = new com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh(this);
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh) {
          return mergeFrom((com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh other) {
        if (other == com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                value_ = input.readUInt32();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int value_ ;
      /**
       * <code>uint32 value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>uint32 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh)
    private static final com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh();
    }

    public static com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllocationStrategyRefresh>
        PARSER = new com.google.protobuf.AbstractParser<AllocationStrategyRefresh>() {
      @java.lang.Override
      public AllocationStrategyRefresh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AllocationStrategyRefresh> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllocationStrategyRefresh> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public com.v2ray.core.app.proxyman.AllocationStrategy.Type getType() {
    @SuppressWarnings("deprecation")
    com.v2ray.core.app.proxyman.AllocationStrategy.Type result = com.v2ray.core.app.proxyman.AllocationStrategy.Type.valueOf(type_);
    return result == null ? com.v2ray.core.app.proxyman.AllocationStrategy.Type.UNRECOGNIZED : result;
  }

  public static final int CONCURRENCY_FIELD_NUMBER = 2;
  private com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency_;
  /**
   * <pre>
   * Number of handlers (ports) running in parallel.
   * Default value is 3 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
   * @return Whether the concurrency field is set.
   */
  @java.lang.Override
  public boolean hasConcurrency() {
    return concurrency_ != null;
  }
  /**
   * <pre>
   * Number of handlers (ports) running in parallel.
   * Default value is 3 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
   * @return The concurrency.
   */
  @java.lang.Override
  public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency getConcurrency() {
    return concurrency_ == null ? com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.getDefaultInstance() : concurrency_;
  }
  /**
   * <pre>
   * Number of handlers (ports) running in parallel.
   * Default value is 3 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder getConcurrencyOrBuilder() {
    return getConcurrency();
  }

  public static final int REFRESH_FIELD_NUMBER = 3;
  private com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh_;
  /**
   * <pre>
   * Number of minutes before a handler is regenerated.
   * Default value is 5 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
   * @return Whether the refresh field is set.
   */
  @java.lang.Override
  public boolean hasRefresh() {
    return refresh_ != null;
  }
  /**
   * <pre>
   * Number of minutes before a handler is regenerated.
   * Default value is 5 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
   * @return The refresh.
   */
  @java.lang.Override
  public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh getRefresh() {
    return refresh_ == null ? com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.getDefaultInstance() : refresh_;
  }
  /**
   * <pre>
   * Number of minutes before a handler is regenerated.
   * Default value is 5 if unset.
   * </pre>
   *
   * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder getRefreshOrBuilder() {
    return getRefresh();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.v2ray.core.app.proxyman.AllocationStrategy.Type.Always.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (concurrency_ != null) {
      output.writeMessage(2, getConcurrency());
    }
    if (refresh_ != null) {
      output.writeMessage(3, getRefresh());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.v2ray.core.app.proxyman.AllocationStrategy.Type.Always.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (concurrency_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConcurrency());
    }
    if (refresh_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRefresh());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.v2ray.core.app.proxyman.AllocationStrategy)) {
      return super.equals(obj);
    }
    com.v2ray.core.app.proxyman.AllocationStrategy other = (com.v2ray.core.app.proxyman.AllocationStrategy) obj;

    if (type_ != other.type_) return false;
    if (hasConcurrency() != other.hasConcurrency()) return false;
    if (hasConcurrency()) {
      if (!getConcurrency()
          .equals(other.getConcurrency())) return false;
    }
    if (hasRefresh() != other.hasRefresh()) return false;
    if (hasRefresh()) {
      if (!getRefresh()
          .equals(other.getRefresh())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (hasConcurrency()) {
      hash = (37 * hash) + CONCURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + getConcurrency().hashCode();
    }
    if (hasRefresh()) {
      hash = (37 * hash) + REFRESH_FIELD_NUMBER;
      hash = (53 * hash) + getRefresh().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.proxyman.AllocationStrategy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.v2ray.core.app.proxyman.AllocationStrategy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v2ray.core.app.proxyman.AllocationStrategy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v2ray.core.app.proxyman.AllocationStrategy)
      com.v2ray.core.app.proxyman.AllocationStrategyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.app.proxyman.AllocationStrategy.class, com.v2ray.core.app.proxyman.AllocationStrategy.Builder.class);
    }

    // Construct using com.v2ray.core.app.proxyman.AllocationStrategy.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      if (concurrencyBuilder_ == null) {
        concurrency_ = null;
      } else {
        concurrency_ = null;
        concurrencyBuilder_ = null;
      }
      if (refreshBuilder_ == null) {
        refresh_ = null;
      } else {
        refresh_ = null;
        refreshBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.v2ray.core.app.proxyman.Config.internal_static_v2ray_core_app_proxyman_AllocationStrategy_descriptor;
    }

    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy getDefaultInstanceForType() {
      return com.v2ray.core.app.proxyman.AllocationStrategy.getDefaultInstance();
    }

    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy build() {
      com.v2ray.core.app.proxyman.AllocationStrategy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy buildPartial() {
      com.v2ray.core.app.proxyman.AllocationStrategy result = new com.v2ray.core.app.proxyman.AllocationStrategy(this);
      result.type_ = type_;
      if (concurrencyBuilder_ == null) {
        result.concurrency_ = concurrency_;
      } else {
        result.concurrency_ = concurrencyBuilder_.build();
      }
      if (refreshBuilder_ == null) {
        result.refresh_ = refresh_;
      } else {
        result.refresh_ = refreshBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.v2ray.core.app.proxyman.AllocationStrategy) {
        return mergeFrom((com.v2ray.core.app.proxyman.AllocationStrategy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.v2ray.core.app.proxyman.AllocationStrategy other) {
      if (other == com.v2ray.core.app.proxyman.AllocationStrategy.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasConcurrency()) {
        mergeConcurrency(other.getConcurrency());
      }
      if (other.hasRefresh()) {
        mergeRefresh(other.getRefresh());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              type_ = input.readEnum();

              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getConcurrencyFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRefreshFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int type_ = 0;
    /**
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.v2ray.core.app.proxyman.AllocationStrategy.Type getType() {
      @SuppressWarnings("deprecation")
      com.v2ray.core.app.proxyman.AllocationStrategy.Type result = com.v2ray.core.app.proxyman.AllocationStrategy.Type.valueOf(type_);
      return result == null ? com.v2ray.core.app.proxyman.AllocationStrategy.Type.UNRECOGNIZED : result;
    }
    /**
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.v2ray.core.app.proxyman.AllocationStrategy.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder> concurrencyBuilder_;
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     * @return Whether the concurrency field is set.
     */
    public boolean hasConcurrency() {
      return concurrencyBuilder_ != null || concurrency_ != null;
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     * @return The concurrency.
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency getConcurrency() {
      if (concurrencyBuilder_ == null) {
        return concurrency_ == null ? com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.getDefaultInstance() : concurrency_;
      } else {
        return concurrencyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public Builder setConcurrency(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency value) {
      if (concurrencyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        concurrency_ = value;
        onChanged();
      } else {
        concurrencyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public Builder setConcurrency(
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder builderForValue) {
      if (concurrencyBuilder_ == null) {
        concurrency_ = builderForValue.build();
        onChanged();
      } else {
        concurrencyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public Builder mergeConcurrency(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency value) {
      if (concurrencyBuilder_ == null) {
        if (concurrency_ != null) {
          concurrency_ =
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.newBuilder(concurrency_).mergeFrom(value).buildPartial();
        } else {
          concurrency_ = value;
        }
        onChanged();
      } else {
        concurrencyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public Builder clearConcurrency() {
      if (concurrencyBuilder_ == null) {
        concurrency_ = null;
        onChanged();
      } else {
        concurrency_ = null;
        concurrencyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder getConcurrencyBuilder() {
      
      onChanged();
      return getConcurrencyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder getConcurrencyOrBuilder() {
      if (concurrencyBuilder_ != null) {
        return concurrencyBuilder_.getMessageOrBuilder();
      } else {
        return concurrency_ == null ?
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.getDefaultInstance() : concurrency_;
      }
    }
    /**
     * <pre>
     * Number of handlers (ports) running in parallel.
     * Default value is 3 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency concurrency = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder> 
        getConcurrencyFieldBuilder() {
      if (concurrencyBuilder_ == null) {
        concurrencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrency.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyConcurrencyOrBuilder>(
                getConcurrency(),
                getParentForChildren(),
                isClean());
        concurrency_ = null;
      }
      return concurrencyBuilder_;
    }

    private com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder> refreshBuilder_;
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     * @return Whether the refresh field is set.
     */
    public boolean hasRefresh() {
      return refreshBuilder_ != null || refresh_ != null;
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     * @return The refresh.
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh getRefresh() {
      if (refreshBuilder_ == null) {
        return refresh_ == null ? com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.getDefaultInstance() : refresh_;
      } else {
        return refreshBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public Builder setRefresh(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh value) {
      if (refreshBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        refresh_ = value;
        onChanged();
      } else {
        refreshBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public Builder setRefresh(
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder builderForValue) {
      if (refreshBuilder_ == null) {
        refresh_ = builderForValue.build();
        onChanged();
      } else {
        refreshBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public Builder mergeRefresh(com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh value) {
      if (refreshBuilder_ == null) {
        if (refresh_ != null) {
          refresh_ =
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.newBuilder(refresh_).mergeFrom(value).buildPartial();
        } else {
          refresh_ = value;
        }
        onChanged();
      } else {
        refreshBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public Builder clearRefresh() {
      if (refreshBuilder_ == null) {
        refresh_ = null;
        onChanged();
      } else {
        refresh_ = null;
        refreshBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder getRefreshBuilder() {
      
      onChanged();
      return getRefreshFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    public com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder getRefreshOrBuilder() {
      if (refreshBuilder_ != null) {
        return refreshBuilder_.getMessageOrBuilder();
      } else {
        return refresh_ == null ?
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.getDefaultInstance() : refresh_;
      }
    }
    /**
     * <pre>
     * Number of minutes before a handler is regenerated.
     * Default value is 5 if unset.
     * </pre>
     *
     * <code>.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh refresh = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder> 
        getRefreshFieldBuilder() {
      if (refreshBuilder_ == null) {
        refreshBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefresh.Builder, com.v2ray.core.app.proxyman.AllocationStrategy.AllocationStrategyRefreshOrBuilder>(
                getRefresh(),
                getParentForChildren(),
                isClean());
        refresh_ = null;
      }
      return refreshBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:v2ray.core.app.proxyman.AllocationStrategy)
  }

  // @@protoc_insertion_point(class_scope:v2ray.core.app.proxyman.AllocationStrategy)
  private static final com.v2ray.core.app.proxyman.AllocationStrategy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.v2ray.core.app.proxyman.AllocationStrategy();
  }

  public static com.v2ray.core.app.proxyman.AllocationStrategy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllocationStrategy>
      PARSER = new com.google.protobuf.AbstractParser<AllocationStrategy>() {
    @java.lang.Override
    public AllocationStrategy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AllocationStrategy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllocationStrategy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.v2ray.core.app.proxyman.AllocationStrategy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

