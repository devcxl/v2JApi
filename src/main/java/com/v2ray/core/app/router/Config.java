// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/router/config.proto

package com.v2ray.core.app.router;

/**
 * Protobuf type {@code v2ray.core.app.router.Config}
 */
public final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v2ray.core.app.router.Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    domainStrategy_ = 0;
    rule_ = java.util.Collections.emptyList();
    balancingRule_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Config();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.v2ray.core.app.router.Config.class, com.v2ray.core.app.router.Config.Builder.class);
  }

  /**
   * Protobuf enum {@code v2ray.core.app.router.Config.DomainStrategy}
   */
  public enum DomainStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Use domain as is.
     * </pre>
     *
     * <code>AsIs = 0;</code>
     */
    AsIs(0),
    /**
     * <pre>
     * Always resolve IP for domains.
     * </pre>
     *
     * <code>UseIp = 1;</code>
     */
    UseIp(1),
    /**
     * <pre>
     * Resolve to IP if the domain doesn't match any rules.
     * </pre>
     *
     * <code>IpIfNonMatch = 2;</code>
     */
    IpIfNonMatch(2),
    /**
     * <pre>
     * Resolve to IP if any rule requires IP matching.
     * </pre>
     *
     * <code>IpOnDemand = 3;</code>
     */
    IpOnDemand(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Use domain as is.
     * </pre>
     *
     * <code>AsIs = 0;</code>
     */
    public static final int AsIs_VALUE = 0;
    /**
     * <pre>
     * Always resolve IP for domains.
     * </pre>
     *
     * <code>UseIp = 1;</code>
     */
    public static final int UseIp_VALUE = 1;
    /**
     * <pre>
     * Resolve to IP if the domain doesn't match any rules.
     * </pre>
     *
     * <code>IpIfNonMatch = 2;</code>
     */
    public static final int IpIfNonMatch_VALUE = 2;
    /**
     * <pre>
     * Resolve to IP if any rule requires IP matching.
     * </pre>
     *
     * <code>IpOnDemand = 3;</code>
     */
    public static final int IpOnDemand_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DomainStrategy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DomainStrategy forNumber(int value) {
      switch (value) {
        case 0: return AsIs;
        case 1: return UseIp;
        case 2: return IpIfNonMatch;
        case 3: return IpOnDemand;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DomainStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DomainStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DomainStrategy>() {
            public DomainStrategy findValueByNumber(int number) {
              return DomainStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.v2ray.core.app.router.Config.getDescriptor().getEnumTypes().get(0);
    }

    private static final DomainStrategy[] VALUES = values();

    public static DomainStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DomainStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:v2ray.core.app.router.Config.DomainStrategy)
  }

  public static final int DOMAIN_STRATEGY_FIELD_NUMBER = 1;
  private int domainStrategy_;
  /**
   * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
   * @return The enum numeric value on the wire for domainStrategy.
   */
  @java.lang.Override public int getDomainStrategyValue() {
    return domainStrategy_;
  }
  /**
   * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
   * @return The domainStrategy.
   */
  @java.lang.Override public com.v2ray.core.app.router.Config.DomainStrategy getDomainStrategy() {
    @SuppressWarnings("deprecation")
    com.v2ray.core.app.router.Config.DomainStrategy result = com.v2ray.core.app.router.Config.DomainStrategy.valueOf(domainStrategy_);
    return result == null ? com.v2ray.core.app.router.Config.DomainStrategy.UNRECOGNIZED : result;
  }

  public static final int RULE_FIELD_NUMBER = 2;
  private java.util.List<com.v2ray.core.app.router.RoutingRule> rule_;
  /**
   * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.app.router.RoutingRule> getRuleList() {
    return rule_;
  }
  /**
   * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.v2ray.core.app.router.RoutingRuleOrBuilder> 
      getRuleOrBuilderList() {
    return rule_;
  }
  /**
   * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
   */
  @java.lang.Override
  public int getRuleCount() {
    return rule_.size();
  }
  /**
   * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.RoutingRule getRule(int index) {
    return rule_.get(index);
  }
  /**
   * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.RoutingRuleOrBuilder getRuleOrBuilder(
      int index) {
    return rule_.get(index);
  }

  public static final int BALANCING_RULE_FIELD_NUMBER = 3;
  private java.util.List<com.v2ray.core.app.router.BalancingRule> balancingRule_;
  /**
   * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.app.router.BalancingRule> getBalancingRuleList() {
    return balancingRule_;
  }
  /**
   * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.v2ray.core.app.router.BalancingRuleOrBuilder> 
      getBalancingRuleOrBuilderList() {
    return balancingRule_;
  }
  /**
   * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
   */
  @java.lang.Override
  public int getBalancingRuleCount() {
    return balancingRule_.size();
  }
  /**
   * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.BalancingRule getBalancingRule(int index) {
    return balancingRule_.get(index);
  }
  /**
   * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.BalancingRuleOrBuilder getBalancingRuleOrBuilder(
      int index) {
    return balancingRule_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (domainStrategy_ != com.v2ray.core.app.router.Config.DomainStrategy.AsIs.getNumber()) {
      output.writeEnum(1, domainStrategy_);
    }
    for (int i = 0; i < rule_.size(); i++) {
      output.writeMessage(2, rule_.get(i));
    }
    for (int i = 0; i < balancingRule_.size(); i++) {
      output.writeMessage(3, balancingRule_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (domainStrategy_ != com.v2ray.core.app.router.Config.DomainStrategy.AsIs.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, domainStrategy_);
    }
    for (int i = 0; i < rule_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, rule_.get(i));
    }
    for (int i = 0; i < balancingRule_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, balancingRule_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.v2ray.core.app.router.Config)) {
      return super.equals(obj);
    }
    com.v2ray.core.app.router.Config other = (com.v2ray.core.app.router.Config) obj;

    if (domainStrategy_ != other.domainStrategy_) return false;
    if (!getRuleList()
        .equals(other.getRuleList())) return false;
    if (!getBalancingRuleList()
        .equals(other.getBalancingRuleList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOMAIN_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + domainStrategy_;
    if (getRuleCount() > 0) {
      hash = (37 * hash) + RULE_FIELD_NUMBER;
      hash = (53 * hash) + getRuleList().hashCode();
    }
    if (getBalancingRuleCount() > 0) {
      hash = (37 * hash) + BALANCING_RULE_FIELD_NUMBER;
      hash = (53 * hash) + getBalancingRuleList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.v2ray.core.app.router.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.router.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.v2ray.core.app.router.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v2ray.core.app.router.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v2ray.core.app.router.Config)
      com.v2ray.core.app.router.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.app.router.Config.class, com.v2ray.core.app.router.Config.Builder.class);
    }

    // Construct using com.v2ray.core.app.router.Config.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      domainStrategy_ = 0;

      if (ruleBuilder_ == null) {
        rule_ = java.util.Collections.emptyList();
      } else {
        rule_ = null;
        ruleBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (balancingRuleBuilder_ == null) {
        balancingRule_ = java.util.Collections.emptyList();
      } else {
        balancingRule_ = null;
        balancingRuleBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_Config_descriptor;
    }

    @java.lang.Override
    public com.v2ray.core.app.router.Config getDefaultInstanceForType() {
      return com.v2ray.core.app.router.Config.getDefaultInstance();
    }

    @java.lang.Override
    public com.v2ray.core.app.router.Config build() {
      com.v2ray.core.app.router.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.v2ray.core.app.router.Config buildPartial() {
      com.v2ray.core.app.router.Config result = new com.v2ray.core.app.router.Config(this);
      int from_bitField0_ = bitField0_;
      result.domainStrategy_ = domainStrategy_;
      if (ruleBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          rule_ = java.util.Collections.unmodifiableList(rule_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rule_ = rule_;
      } else {
        result.rule_ = ruleBuilder_.build();
      }
      if (balancingRuleBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          balancingRule_ = java.util.Collections.unmodifiableList(balancingRule_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.balancingRule_ = balancingRule_;
      } else {
        result.balancingRule_ = balancingRuleBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.v2ray.core.app.router.Config) {
        return mergeFrom((com.v2ray.core.app.router.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.v2ray.core.app.router.Config other) {
      if (other == com.v2ray.core.app.router.Config.getDefaultInstance()) return this;
      if (other.domainStrategy_ != 0) {
        setDomainStrategyValue(other.getDomainStrategyValue());
      }
      if (ruleBuilder_ == null) {
        if (!other.rule_.isEmpty()) {
          if (rule_.isEmpty()) {
            rule_ = other.rule_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRuleIsMutable();
            rule_.addAll(other.rule_);
          }
          onChanged();
        }
      } else {
        if (!other.rule_.isEmpty()) {
          if (ruleBuilder_.isEmpty()) {
            ruleBuilder_.dispose();
            ruleBuilder_ = null;
            rule_ = other.rule_;
            bitField0_ = (bitField0_ & ~0x00000001);
            ruleBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRuleFieldBuilder() : null;
          } else {
            ruleBuilder_.addAllMessages(other.rule_);
          }
        }
      }
      if (balancingRuleBuilder_ == null) {
        if (!other.balancingRule_.isEmpty()) {
          if (balancingRule_.isEmpty()) {
            balancingRule_ = other.balancingRule_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBalancingRuleIsMutable();
            balancingRule_.addAll(other.balancingRule_);
          }
          onChanged();
        }
      } else {
        if (!other.balancingRule_.isEmpty()) {
          if (balancingRuleBuilder_.isEmpty()) {
            balancingRuleBuilder_.dispose();
            balancingRuleBuilder_ = null;
            balancingRule_ = other.balancingRule_;
            bitField0_ = (bitField0_ & ~0x00000002);
            balancingRuleBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBalancingRuleFieldBuilder() : null;
          } else {
            balancingRuleBuilder_.addAllMessages(other.balancingRule_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              domainStrategy_ = input.readEnum();

              break;
            } // case 8
            case 18: {
              com.v2ray.core.app.router.RoutingRule m =
                  input.readMessage(
                      com.v2ray.core.app.router.RoutingRule.parser(),
                      extensionRegistry);
              if (ruleBuilder_ == null) {
                ensureRuleIsMutable();
                rule_.add(m);
              } else {
                ruleBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.v2ray.core.app.router.BalancingRule m =
                  input.readMessage(
                      com.v2ray.core.app.router.BalancingRule.parser(),
                      extensionRegistry);
              if (balancingRuleBuilder_ == null) {
                ensureBalancingRuleIsMutable();
                balancingRule_.add(m);
              } else {
                balancingRuleBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int domainStrategy_ = 0;
    /**
     * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
     * @return The enum numeric value on the wire for domainStrategy.
     */
    @java.lang.Override public int getDomainStrategyValue() {
      return domainStrategy_;
    }
    /**
     * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
     * @param value The enum numeric value on the wire for domainStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setDomainStrategyValue(int value) {
      
      domainStrategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
     * @return The domainStrategy.
     */
    @java.lang.Override
    public com.v2ray.core.app.router.Config.DomainStrategy getDomainStrategy() {
      @SuppressWarnings("deprecation")
      com.v2ray.core.app.router.Config.DomainStrategy result = com.v2ray.core.app.router.Config.DomainStrategy.valueOf(domainStrategy_);
      return result == null ? com.v2ray.core.app.router.Config.DomainStrategy.UNRECOGNIZED : result;
    }
    /**
     * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
     * @param value The domainStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setDomainStrategy(com.v2ray.core.app.router.Config.DomainStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      domainStrategy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.v2ray.core.app.router.Config.DomainStrategy domain_strategy = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainStrategy() {
      
      domainStrategy_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.v2ray.core.app.router.RoutingRule> rule_ =
      java.util.Collections.emptyList();
    private void ensureRuleIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        rule_ = new java.util.ArrayList<com.v2ray.core.app.router.RoutingRule>(rule_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.RoutingRule, com.v2ray.core.app.router.RoutingRule.Builder, com.v2ray.core.app.router.RoutingRuleOrBuilder> ruleBuilder_;

    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.router.RoutingRule> getRuleList() {
      if (ruleBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rule_);
      } else {
        return ruleBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public int getRuleCount() {
      if (ruleBuilder_ == null) {
        return rule_.size();
      } else {
        return ruleBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public com.v2ray.core.app.router.RoutingRule getRule(int index) {
      if (ruleBuilder_ == null) {
        return rule_.get(index);
      } else {
        return ruleBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder setRule(
        int index, com.v2ray.core.app.router.RoutingRule value) {
      if (ruleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRuleIsMutable();
        rule_.set(index, value);
        onChanged();
      } else {
        ruleBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder setRule(
        int index, com.v2ray.core.app.router.RoutingRule.Builder builderForValue) {
      if (ruleBuilder_ == null) {
        ensureRuleIsMutable();
        rule_.set(index, builderForValue.build());
        onChanged();
      } else {
        ruleBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder addRule(com.v2ray.core.app.router.RoutingRule value) {
      if (ruleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRuleIsMutable();
        rule_.add(value);
        onChanged();
      } else {
        ruleBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder addRule(
        int index, com.v2ray.core.app.router.RoutingRule value) {
      if (ruleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRuleIsMutable();
        rule_.add(index, value);
        onChanged();
      } else {
        ruleBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder addRule(
        com.v2ray.core.app.router.RoutingRule.Builder builderForValue) {
      if (ruleBuilder_ == null) {
        ensureRuleIsMutable();
        rule_.add(builderForValue.build());
        onChanged();
      } else {
        ruleBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder addRule(
        int index, com.v2ray.core.app.router.RoutingRule.Builder builderForValue) {
      if (ruleBuilder_ == null) {
        ensureRuleIsMutable();
        rule_.add(index, builderForValue.build());
        onChanged();
      } else {
        ruleBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder addAllRule(
        java.lang.Iterable<? extends com.v2ray.core.app.router.RoutingRule> values) {
      if (ruleBuilder_ == null) {
        ensureRuleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rule_);
        onChanged();
      } else {
        ruleBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder clearRule() {
      if (ruleBuilder_ == null) {
        rule_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        ruleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public Builder removeRule(int index) {
      if (ruleBuilder_ == null) {
        ensureRuleIsMutable();
        rule_.remove(index);
        onChanged();
      } else {
        ruleBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public com.v2ray.core.app.router.RoutingRule.Builder getRuleBuilder(
        int index) {
      return getRuleFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public com.v2ray.core.app.router.RoutingRuleOrBuilder getRuleOrBuilder(
        int index) {
      if (ruleBuilder_ == null) {
        return rule_.get(index);  } else {
        return ruleBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.router.RoutingRuleOrBuilder> 
         getRuleOrBuilderList() {
      if (ruleBuilder_ != null) {
        return ruleBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rule_);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public com.v2ray.core.app.router.RoutingRule.Builder addRuleBuilder() {
      return getRuleFieldBuilder().addBuilder(
          com.v2ray.core.app.router.RoutingRule.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public com.v2ray.core.app.router.RoutingRule.Builder addRuleBuilder(
        int index) {
      return getRuleFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.RoutingRule.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.app.router.RoutingRule rule = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.router.RoutingRule.Builder> 
         getRuleBuilderList() {
      return getRuleFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.RoutingRule, com.v2ray.core.app.router.RoutingRule.Builder, com.v2ray.core.app.router.RoutingRuleOrBuilder> 
        getRuleFieldBuilder() {
      if (ruleBuilder_ == null) {
        ruleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.RoutingRule, com.v2ray.core.app.router.RoutingRule.Builder, com.v2ray.core.app.router.RoutingRuleOrBuilder>(
                rule_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        rule_ = null;
      }
      return ruleBuilder_;
    }

    private java.util.List<com.v2ray.core.app.router.BalancingRule> balancingRule_ =
      java.util.Collections.emptyList();
    private void ensureBalancingRuleIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        balancingRule_ = new java.util.ArrayList<com.v2ray.core.app.router.BalancingRule>(balancingRule_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.BalancingRule, com.v2ray.core.app.router.BalancingRule.Builder, com.v2ray.core.app.router.BalancingRuleOrBuilder> balancingRuleBuilder_;

    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public java.util.List<com.v2ray.core.app.router.BalancingRule> getBalancingRuleList() {
      if (balancingRuleBuilder_ == null) {
        return java.util.Collections.unmodifiableList(balancingRule_);
      } else {
        return balancingRuleBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public int getBalancingRuleCount() {
      if (balancingRuleBuilder_ == null) {
        return balancingRule_.size();
      } else {
        return balancingRuleBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public com.v2ray.core.app.router.BalancingRule getBalancingRule(int index) {
      if (balancingRuleBuilder_ == null) {
        return balancingRule_.get(index);
      } else {
        return balancingRuleBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder setBalancingRule(
        int index, com.v2ray.core.app.router.BalancingRule value) {
      if (balancingRuleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancingRuleIsMutable();
        balancingRule_.set(index, value);
        onChanged();
      } else {
        balancingRuleBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder setBalancingRule(
        int index, com.v2ray.core.app.router.BalancingRule.Builder builderForValue) {
      if (balancingRuleBuilder_ == null) {
        ensureBalancingRuleIsMutable();
        balancingRule_.set(index, builderForValue.build());
        onChanged();
      } else {
        balancingRuleBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder addBalancingRule(com.v2ray.core.app.router.BalancingRule value) {
      if (balancingRuleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancingRuleIsMutable();
        balancingRule_.add(value);
        onChanged();
      } else {
        balancingRuleBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder addBalancingRule(
        int index, com.v2ray.core.app.router.BalancingRule value) {
      if (balancingRuleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBalancingRuleIsMutable();
        balancingRule_.add(index, value);
        onChanged();
      } else {
        balancingRuleBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder addBalancingRule(
        com.v2ray.core.app.router.BalancingRule.Builder builderForValue) {
      if (balancingRuleBuilder_ == null) {
        ensureBalancingRuleIsMutable();
        balancingRule_.add(builderForValue.build());
        onChanged();
      } else {
        balancingRuleBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder addBalancingRule(
        int index, com.v2ray.core.app.router.BalancingRule.Builder builderForValue) {
      if (balancingRuleBuilder_ == null) {
        ensureBalancingRuleIsMutable();
        balancingRule_.add(index, builderForValue.build());
        onChanged();
      } else {
        balancingRuleBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder addAllBalancingRule(
        java.lang.Iterable<? extends com.v2ray.core.app.router.BalancingRule> values) {
      if (balancingRuleBuilder_ == null) {
        ensureBalancingRuleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, balancingRule_);
        onChanged();
      } else {
        balancingRuleBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder clearBalancingRule() {
      if (balancingRuleBuilder_ == null) {
        balancingRule_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        balancingRuleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public Builder removeBalancingRule(int index) {
      if (balancingRuleBuilder_ == null) {
        ensureBalancingRuleIsMutable();
        balancingRule_.remove(index);
        onChanged();
      } else {
        balancingRuleBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public com.v2ray.core.app.router.BalancingRule.Builder getBalancingRuleBuilder(
        int index) {
      return getBalancingRuleFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public com.v2ray.core.app.router.BalancingRuleOrBuilder getBalancingRuleOrBuilder(
        int index) {
      if (balancingRuleBuilder_ == null) {
        return balancingRule_.get(index);  } else {
        return balancingRuleBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.router.BalancingRuleOrBuilder> 
         getBalancingRuleOrBuilderList() {
      if (balancingRuleBuilder_ != null) {
        return balancingRuleBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(balancingRule_);
      }
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public com.v2ray.core.app.router.BalancingRule.Builder addBalancingRuleBuilder() {
      return getBalancingRuleFieldBuilder().addBuilder(
          com.v2ray.core.app.router.BalancingRule.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public com.v2ray.core.app.router.BalancingRule.Builder addBalancingRuleBuilder(
        int index) {
      return getBalancingRuleFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.BalancingRule.getDefaultInstance());
    }
    /**
     * <code>repeated .v2ray.core.app.router.BalancingRule balancing_rule = 3;</code>
     */
    public java.util.List<com.v2ray.core.app.router.BalancingRule.Builder> 
         getBalancingRuleBuilderList() {
      return getBalancingRuleFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.BalancingRule, com.v2ray.core.app.router.BalancingRule.Builder, com.v2ray.core.app.router.BalancingRuleOrBuilder> 
        getBalancingRuleFieldBuilder() {
      if (balancingRuleBuilder_ == null) {
        balancingRuleBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.BalancingRule, com.v2ray.core.app.router.BalancingRule.Builder, com.v2ray.core.app.router.BalancingRuleOrBuilder>(
                balancingRule_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        balancingRule_ = null;
      }
      return balancingRuleBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:v2ray.core.app.router.Config)
  }

  // @@protoc_insertion_point(class_scope:v2ray.core.app.router.Config)
  private static final com.v2ray.core.app.router.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.v2ray.core.app.router.Config();
  }

  public static com.v2ray.core.app.router.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.v2ray.core.app.router.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

