// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/router/config.proto

package com.v2ray.core.app.router;

/**
 * Protobuf type {@code v2ray.core.app.router.RoutingRule}
 */
public final class RoutingRule extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v2ray.core.app.router.RoutingRule)
    RoutingRuleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RoutingRule.newBuilder() to construct.
  private RoutingRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RoutingRule() {
    domain_ = java.util.Collections.emptyList();
    cidr_ = java.util.Collections.emptyList();
    geoip_ = java.util.Collections.emptyList();
    networks_ = java.util.Collections.emptyList();
    sourceCidr_ = java.util.Collections.emptyList();
    sourceGeoip_ = java.util.Collections.emptyList();
    userEmail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    inboundTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    protocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    attributes_ = "";
    domainMatcher_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RoutingRule();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_RoutingRule_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_RoutingRule_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.v2ray.core.app.router.RoutingRule.class, com.v2ray.core.app.router.RoutingRule.Builder.class);
  }

  private int targetTagCase_ = 0;
  private java.lang.Object targetTag_;
  public enum TargetTagCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TAG(1),
    BALANCING_TAG(12),
    TARGETTAG_NOT_SET(0);
    private final int value;
    private TargetTagCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TargetTagCase valueOf(int value) {
      return forNumber(value);
    }

    public static TargetTagCase forNumber(int value) {
      switch (value) {
        case 1: return TAG;
        case 12: return BALANCING_TAG;
        case 0: return TARGETTAG_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TargetTagCase
  getTargetTagCase() {
    return TargetTagCase.forNumber(
        targetTagCase_);
  }

  public static final int TAG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Tag of outbound that this rule is pointing to.
   * </pre>
   *
   * <code>string tag = 1;</code>
   * @return Whether the tag field is set.
   */
  public boolean hasTag() {
    return targetTagCase_ == 1;
  }
  /**
   * <pre>
   * Tag of outbound that this rule is pointing to.
   * </pre>
   *
   * <code>string tag = 1;</code>
   * @return The tag.
   */
  public java.lang.String getTag() {
    java.lang.Object ref = "";
    if (targetTagCase_ == 1) {
      ref = targetTag_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (targetTagCase_ == 1) {
        targetTag_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Tag of outbound that this rule is pointing to.
   * </pre>
   *
   * <code>string tag = 1;</code>
   * @return The bytes for tag.
   */
  public com.google.protobuf.ByteString
      getTagBytes() {
    java.lang.Object ref = "";
    if (targetTagCase_ == 1) {
      ref = targetTag_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (targetTagCase_ == 1) {
        targetTag_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BALANCING_TAG_FIELD_NUMBER = 12;
  /**
   * <pre>
   * Tag of routing balancer.
   * </pre>
   *
   * <code>string balancing_tag = 12;</code>
   * @return Whether the balancingTag field is set.
   */
  public boolean hasBalancingTag() {
    return targetTagCase_ == 12;
  }
  /**
   * <pre>
   * Tag of routing balancer.
   * </pre>
   *
   * <code>string balancing_tag = 12;</code>
   * @return The balancingTag.
   */
  public java.lang.String getBalancingTag() {
    java.lang.Object ref = "";
    if (targetTagCase_ == 12) {
      ref = targetTag_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (targetTagCase_ == 12) {
        targetTag_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Tag of routing balancer.
   * </pre>
   *
   * <code>string balancing_tag = 12;</code>
   * @return The bytes for balancingTag.
   */
  public com.google.protobuf.ByteString
      getBalancingTagBytes() {
    java.lang.Object ref = "";
    if (targetTagCase_ == 12) {
      ref = targetTag_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (targetTagCase_ == 12) {
        targetTag_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOMAIN_FIELD_NUMBER = 2;
  private java.util.List<com.v2ray.core.app.router.Domain> domain_;
  /**
   * <pre>
   * List of domains for target domain matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.app.router.Domain> getDomainList() {
    return domain_;
  }
  /**
   * <pre>
   * List of domains for target domain matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.v2ray.core.app.router.DomainOrBuilder> 
      getDomainOrBuilderList() {
    return domain_;
  }
  /**
   * <pre>
   * List of domains for target domain matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
   */
  @java.lang.Override
  public int getDomainCount() {
    return domain_.size();
  }
  /**
   * <pre>
   * List of domains for target domain matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.Domain getDomain(int index) {
    return domain_.get(index);
  }
  /**
   * <pre>
   * List of domains for target domain matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.DomainOrBuilder getDomainOrBuilder(
      int index) {
    return domain_.get(index);
  }

  public static final int CIDR_FIELD_NUMBER = 3;
  private java.util.List<com.v2ray.core.app.router.CIDR> cidr_;
  /**
   * <pre>
   * List of CIDRs for target IP address matching.
   * Deprecated. Use geoip below.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR> getCidrList() {
    return cidr_;
  }
  /**
   * <pre>
   * List of CIDRs for target IP address matching.
   * Deprecated. Use geoip below.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends com.v2ray.core.app.router.CIDROrBuilder> 
      getCidrOrBuilderList() {
    return cidr_;
  }
  /**
   * <pre>
   * List of CIDRs for target IP address matching.
   * Deprecated. Use geoip below.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getCidrCount() {
    return cidr_.size();
  }
  /**
   * <pre>
   * List of CIDRs for target IP address matching.
   * Deprecated. Use geoip below.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.app.router.CIDR getCidr(int index) {
    return cidr_.get(index);
  }
  /**
   * <pre>
   * List of CIDRs for target IP address matching.
   * Deprecated. Use geoip below.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.app.router.CIDROrBuilder getCidrOrBuilder(
      int index) {
    return cidr_.get(index);
  }

  public static final int GEOIP_FIELD_NUMBER = 10;
  private java.util.List<com.v2ray.core.app.router.GeoIP> geoip_;
  /**
   * <pre>
   * List of GeoIPs for target IP address matching. If this entry exists, the
   * cidr above will have no effect. GeoIP fields with the same country code are
   * supposed to contain exactly same content. They will be merged during
   * runtime. For customized GeoIPs, please leave country code empty.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.app.router.GeoIP> getGeoipList() {
    return geoip_;
  }
  /**
   * <pre>
   * List of GeoIPs for target IP address matching. If this entry exists, the
   * cidr above will have no effect. GeoIP fields with the same country code are
   * supposed to contain exactly same content. They will be merged during
   * runtime. For customized GeoIPs, please leave country code empty.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.v2ray.core.app.router.GeoIPOrBuilder> 
      getGeoipOrBuilderList() {
    return geoip_;
  }
  /**
   * <pre>
   * List of GeoIPs for target IP address matching. If this entry exists, the
   * cidr above will have no effect. GeoIP fields with the same country code are
   * supposed to contain exactly same content. They will be merged during
   * runtime. For customized GeoIPs, please leave country code empty.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
   */
  @java.lang.Override
  public int getGeoipCount() {
    return geoip_.size();
  }
  /**
   * <pre>
   * List of GeoIPs for target IP address matching. If this entry exists, the
   * cidr above will have no effect. GeoIP fields with the same country code are
   * supposed to contain exactly same content. They will be merged during
   * runtime. For customized GeoIPs, please leave country code empty.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.GeoIP getGeoip(int index) {
    return geoip_.get(index);
  }
  /**
   * <pre>
   * List of GeoIPs for target IP address matching. If this entry exists, the
   * cidr above will have no effect. GeoIP fields with the same country code are
   * supposed to contain exactly same content. They will be merged during
   * runtime. For customized GeoIPs, please leave country code empty.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.GeoIPOrBuilder getGeoipOrBuilder(
      int index) {
    return geoip_.get(index);
  }

  public static final int PORT_RANGE_FIELD_NUMBER = 4;
  private com.v2ray.core.common.net.PortRange portRange_;
  /**
   * <pre>
   * A range of port [from, to]. If the destination port is in this range, this
   * rule takes effect. Deprecated. Use port_list.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
   * @deprecated v2ray.core.app.router.RoutingRule.port_range is deprecated.
   *     See app/router/config.proto;l=96
   * @return Whether the portRange field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasPortRange() {
    return portRange_ != null;
  }
  /**
   * <pre>
   * A range of port [from, to]. If the destination port is in this range, this
   * rule takes effect. Deprecated. Use port_list.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
   * @deprecated v2ray.core.app.router.RoutingRule.port_range is deprecated.
   *     See app/router/config.proto;l=96
   * @return The portRange.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.common.net.PortRange getPortRange() {
    return portRange_ == null ? com.v2ray.core.common.net.PortRange.getDefaultInstance() : portRange_;
  }
  /**
   * <pre>
   * A range of port [from, to]. If the destination port is in this range, this
   * rule takes effect. Deprecated. Use port_list.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.common.net.PortRangeOrBuilder getPortRangeOrBuilder() {
    return getPortRange();
  }

  public static final int PORT_LIST_FIELD_NUMBER = 14;
  private com.v2ray.core.common.net.PortList portList_;
  /**
   * <pre>
   * List of ports.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
   * @return Whether the portList field is set.
   */
  @java.lang.Override
  public boolean hasPortList() {
    return portList_ != null;
  }
  /**
   * <pre>
   * List of ports.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
   * @return The portList.
   */
  @java.lang.Override
  public com.v2ray.core.common.net.PortList getPortList() {
    return portList_ == null ? com.v2ray.core.common.net.PortList.getDefaultInstance() : portList_;
  }
  /**
   * <pre>
   * List of ports.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
   */
  @java.lang.Override
  public com.v2ray.core.common.net.PortListOrBuilder getPortListOrBuilder() {
    return getPortList();
  }

  public static final int NETWORK_LIST_FIELD_NUMBER = 5;
  private com.v2ray.core.common.net.NetworkList networkList_;
  /**
   * <pre>
   * List of networks. Deprecated. Use networks.
   * </pre>
   *
   * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
   * @deprecated v2ray.core.app.router.RoutingRule.network_list is deprecated.
   *     See app/router/config.proto;l=102
   * @return Whether the networkList field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasNetworkList() {
    return networkList_ != null;
  }
  /**
   * <pre>
   * List of networks. Deprecated. Use networks.
   * </pre>
   *
   * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
   * @deprecated v2ray.core.app.router.RoutingRule.network_list is deprecated.
   *     See app/router/config.proto;l=102
   * @return The networkList.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.common.net.NetworkList getNetworkList() {
    return networkList_ == null ? com.v2ray.core.common.net.NetworkList.getDefaultInstance() : networkList_;
  }
  /**
   * <pre>
   * List of networks. Deprecated. Use networks.
   * </pre>
   *
   * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.common.net.NetworkListOrBuilder getNetworkListOrBuilder() {
    return getNetworkList();
  }

  public static final int NETWORKS_FIELD_NUMBER = 13;
  private java.util.List<java.lang.Integer> networks_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.v2ray.core.common.net.Network> networks_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.v2ray.core.common.net.Network>() {
            public com.v2ray.core.common.net.Network convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              com.v2ray.core.common.net.Network result = com.v2ray.core.common.net.Network.valueOf(from);
              return result == null ? com.v2ray.core.common.net.Network.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * List of networks for matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
   * @return A list containing the networks.
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.common.net.Network> getNetworksList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.v2ray.core.common.net.Network>(networks_, networks_converter_);
  }
  /**
   * <pre>
   * List of networks for matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
   * @return The count of networks.
   */
  @java.lang.Override
  public int getNetworksCount() {
    return networks_.size();
  }
  /**
   * <pre>
   * List of networks for matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
   * @param index The index of the element to return.
   * @return The networks at the given index.
   */
  @java.lang.Override
  public com.v2ray.core.common.net.Network getNetworks(int index) {
    return networks_converter_.convert(networks_.get(index));
  }
  /**
   * <pre>
   * List of networks for matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
   * @return A list containing the enum numeric values on the wire for networks.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getNetworksValueList() {
    return networks_;
  }
  /**
   * <pre>
   * List of networks for matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of networks at the given index.
   */
  @java.lang.Override
  public int getNetworksValue(int index) {
    return networks_.get(index);
  }
  private int networksMemoizedSerializedSize;

  public static final int SOURCE_CIDR_FIELD_NUMBER = 6;
  private java.util.List<com.v2ray.core.app.router.CIDR> sourceCidr_;
  /**
   * <pre>
   * List of CIDRs for source IP address matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR> getSourceCidrList() {
    return sourceCidr_;
  }
  /**
   * <pre>
   * List of CIDRs for source IP address matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends com.v2ray.core.app.router.CIDROrBuilder> 
      getSourceCidrOrBuilderList() {
    return sourceCidr_;
  }
  /**
   * <pre>
   * List of CIDRs for source IP address matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getSourceCidrCount() {
    return sourceCidr_.size();
  }
  /**
   * <pre>
   * List of CIDRs for source IP address matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.app.router.CIDR getSourceCidr(int index) {
    return sourceCidr_.get(index);
  }
  /**
   * <pre>
   * List of CIDRs for source IP address matching.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.v2ray.core.app.router.CIDROrBuilder getSourceCidrOrBuilder(
      int index) {
    return sourceCidr_.get(index);
  }

  public static final int SOURCE_GEOIP_FIELD_NUMBER = 11;
  private java.util.List<com.v2ray.core.app.router.GeoIP> sourceGeoip_;
  /**
   * <pre>
   * List of GeoIPs for source IP address matching. If this entry exists, the
   * source_cidr above will have no effect.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.v2ray.core.app.router.GeoIP> getSourceGeoipList() {
    return sourceGeoip_;
  }
  /**
   * <pre>
   * List of GeoIPs for source IP address matching. If this entry exists, the
   * source_cidr above will have no effect.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.v2ray.core.app.router.GeoIPOrBuilder> 
      getSourceGeoipOrBuilderList() {
    return sourceGeoip_;
  }
  /**
   * <pre>
   * List of GeoIPs for source IP address matching. If this entry exists, the
   * source_cidr above will have no effect.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
   */
  @java.lang.Override
  public int getSourceGeoipCount() {
    return sourceGeoip_.size();
  }
  /**
   * <pre>
   * List of GeoIPs for source IP address matching. If this entry exists, the
   * source_cidr above will have no effect.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.GeoIP getSourceGeoip(int index) {
    return sourceGeoip_.get(index);
  }
  /**
   * <pre>
   * List of GeoIPs for source IP address matching. If this entry exists, the
   * source_cidr above will have no effect.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
   */
  @java.lang.Override
  public com.v2ray.core.app.router.GeoIPOrBuilder getSourceGeoipOrBuilder(
      int index) {
    return sourceGeoip_.get(index);
  }

  public static final int SOURCE_PORT_LIST_FIELD_NUMBER = 16;
  private com.v2ray.core.common.net.PortList sourcePortList_;
  /**
   * <pre>
   * List of ports for source port matching.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
   * @return Whether the sourcePortList field is set.
   */
  @java.lang.Override
  public boolean hasSourcePortList() {
    return sourcePortList_ != null;
  }
  /**
   * <pre>
   * List of ports for source port matching.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
   * @return The sourcePortList.
   */
  @java.lang.Override
  public com.v2ray.core.common.net.PortList getSourcePortList() {
    return sourcePortList_ == null ? com.v2ray.core.common.net.PortList.getDefaultInstance() : sourcePortList_;
  }
  /**
   * <pre>
   * List of ports for source port matching.
   * </pre>
   *
   * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
   */
  @java.lang.Override
  public com.v2ray.core.common.net.PortListOrBuilder getSourcePortListOrBuilder() {
    return getSourcePortList();
  }

  public static final int USER_EMAIL_FIELD_NUMBER = 7;
  private com.google.protobuf.LazyStringList userEmail_;
  /**
   * <code>repeated string user_email = 7;</code>
   * @return A list containing the userEmail.
   */
  public com.google.protobuf.ProtocolStringList
      getUserEmailList() {
    return userEmail_;
  }
  /**
   * <code>repeated string user_email = 7;</code>
   * @return The count of userEmail.
   */
  public int getUserEmailCount() {
    return userEmail_.size();
  }
  /**
   * <code>repeated string user_email = 7;</code>
   * @param index The index of the element to return.
   * @return The userEmail at the given index.
   */
  public java.lang.String getUserEmail(int index) {
    return userEmail_.get(index);
  }
  /**
   * <code>repeated string user_email = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the userEmail at the given index.
   */
  public com.google.protobuf.ByteString
      getUserEmailBytes(int index) {
    return userEmail_.getByteString(index);
  }

  public static final int INBOUND_TAG_FIELD_NUMBER = 8;
  private com.google.protobuf.LazyStringList inboundTag_;
  /**
   * <code>repeated string inbound_tag = 8;</code>
   * @return A list containing the inboundTag.
   */
  public com.google.protobuf.ProtocolStringList
      getInboundTagList() {
    return inboundTag_;
  }
  /**
   * <code>repeated string inbound_tag = 8;</code>
   * @return The count of inboundTag.
   */
  public int getInboundTagCount() {
    return inboundTag_.size();
  }
  /**
   * <code>repeated string inbound_tag = 8;</code>
   * @param index The index of the element to return.
   * @return The inboundTag at the given index.
   */
  public java.lang.String getInboundTag(int index) {
    return inboundTag_.get(index);
  }
  /**
   * <code>repeated string inbound_tag = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the inboundTag at the given index.
   */
  public com.google.protobuf.ByteString
      getInboundTagBytes(int index) {
    return inboundTag_.getByteString(index);
  }

  public static final int PROTOCOL_FIELD_NUMBER = 9;
  private com.google.protobuf.LazyStringList protocol_;
  /**
   * <code>repeated string protocol = 9;</code>
   * @return A list containing the protocol.
   */
  public com.google.protobuf.ProtocolStringList
      getProtocolList() {
    return protocol_;
  }
  /**
   * <code>repeated string protocol = 9;</code>
   * @return The count of protocol.
   */
  public int getProtocolCount() {
    return protocol_.size();
  }
  /**
   * <code>repeated string protocol = 9;</code>
   * @param index The index of the element to return.
   * @return The protocol at the given index.
   */
  public java.lang.String getProtocol(int index) {
    return protocol_.get(index);
  }
  /**
   * <code>repeated string protocol = 9;</code>
   * @param index The index of the value to return.
   * @return The bytes of the protocol at the given index.
   */
  public com.google.protobuf.ByteString
      getProtocolBytes(int index) {
    return protocol_.getByteString(index);
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 15;
  private volatile java.lang.Object attributes_;
  /**
   * <code>string attributes = 15;</code>
   * @return The attributes.
   */
  @java.lang.Override
  public java.lang.String getAttributes() {
    java.lang.Object ref = attributes_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      attributes_ = s;
      return s;
    }
  }
  /**
   * <code>string attributes = 15;</code>
   * @return The bytes for attributes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAttributesBytes() {
    java.lang.Object ref = attributes_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      attributes_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOMAIN_MATCHER_FIELD_NUMBER = 17;
  private volatile java.lang.Object domainMatcher_;
  /**
   * <code>string domain_matcher = 17;</code>
   * @return The domainMatcher.
   */
  @java.lang.Override
  public java.lang.String getDomainMatcher() {
    java.lang.Object ref = domainMatcher_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      domainMatcher_ = s;
      return s;
    }
  }
  /**
   * <code>string domain_matcher = 17;</code>
   * @return The bytes for domainMatcher.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDomainMatcherBytes() {
    java.lang.Object ref = domainMatcher_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      domainMatcher_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (targetTagCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, targetTag_);
    }
    for (int i = 0; i < domain_.size(); i++) {
      output.writeMessage(2, domain_.get(i));
    }
    for (int i = 0; i < cidr_.size(); i++) {
      output.writeMessage(3, cidr_.get(i));
    }
    if (portRange_ != null) {
      output.writeMessage(4, getPortRange());
    }
    if (networkList_ != null) {
      output.writeMessage(5, getNetworkList());
    }
    for (int i = 0; i < sourceCidr_.size(); i++) {
      output.writeMessage(6, sourceCidr_.get(i));
    }
    for (int i = 0; i < userEmail_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, userEmail_.getRaw(i));
    }
    for (int i = 0; i < inboundTag_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, inboundTag_.getRaw(i));
    }
    for (int i = 0; i < protocol_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, protocol_.getRaw(i));
    }
    for (int i = 0; i < geoip_.size(); i++) {
      output.writeMessage(10, geoip_.get(i));
    }
    for (int i = 0; i < sourceGeoip_.size(); i++) {
      output.writeMessage(11, sourceGeoip_.get(i));
    }
    if (targetTagCase_ == 12) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, targetTag_);
    }
    if (getNetworksList().size() > 0) {
      output.writeUInt32NoTag(106);
      output.writeUInt32NoTag(networksMemoizedSerializedSize);
    }
    for (int i = 0; i < networks_.size(); i++) {
      output.writeEnumNoTag(networks_.get(i));
    }
    if (portList_ != null) {
      output.writeMessage(14, getPortList());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(attributes_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, attributes_);
    }
    if (sourcePortList_ != null) {
      output.writeMessage(16, getSourcePortList());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domainMatcher_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, domainMatcher_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (targetTagCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, targetTag_);
    }
    for (int i = 0; i < domain_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, domain_.get(i));
    }
    for (int i = 0; i < cidr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, cidr_.get(i));
    }
    if (portRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getPortRange());
    }
    if (networkList_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getNetworkList());
    }
    for (int i = 0; i < sourceCidr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, sourceCidr_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < userEmail_.size(); i++) {
        dataSize += computeStringSizeNoTag(userEmail_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getUserEmailList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < inboundTag_.size(); i++) {
        dataSize += computeStringSizeNoTag(inboundTag_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getInboundTagList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < protocol_.size(); i++) {
        dataSize += computeStringSizeNoTag(protocol_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getProtocolList().size();
    }
    for (int i = 0; i < geoip_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, geoip_.get(i));
    }
    for (int i = 0; i < sourceGeoip_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, sourceGeoip_.get(i));
    }
    if (targetTagCase_ == 12) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, targetTag_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < networks_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(networks_.get(i));
      }
      size += dataSize;
      if (!getNetworksList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }networksMemoizedSerializedSize = dataSize;
    }
    if (portList_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getPortList());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(attributes_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, attributes_);
    }
    if (sourcePortList_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getSourcePortList());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(domainMatcher_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, domainMatcher_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.v2ray.core.app.router.RoutingRule)) {
      return super.equals(obj);
    }
    com.v2ray.core.app.router.RoutingRule other = (com.v2ray.core.app.router.RoutingRule) obj;

    if (!getDomainList()
        .equals(other.getDomainList())) return false;
    if (!getCidrList()
        .equals(other.getCidrList())) return false;
    if (!getGeoipList()
        .equals(other.getGeoipList())) return false;
    if (hasPortRange() != other.hasPortRange()) return false;
    if (hasPortRange()) {
      if (!getPortRange()
          .equals(other.getPortRange())) return false;
    }
    if (hasPortList() != other.hasPortList()) return false;
    if (hasPortList()) {
      if (!getPortList()
          .equals(other.getPortList())) return false;
    }
    if (hasNetworkList() != other.hasNetworkList()) return false;
    if (hasNetworkList()) {
      if (!getNetworkList()
          .equals(other.getNetworkList())) return false;
    }
    if (!networks_.equals(other.networks_)) return false;
    if (!getSourceCidrList()
        .equals(other.getSourceCidrList())) return false;
    if (!getSourceGeoipList()
        .equals(other.getSourceGeoipList())) return false;
    if (hasSourcePortList() != other.hasSourcePortList()) return false;
    if (hasSourcePortList()) {
      if (!getSourcePortList()
          .equals(other.getSourcePortList())) return false;
    }
    if (!getUserEmailList()
        .equals(other.getUserEmailList())) return false;
    if (!getInboundTagList()
        .equals(other.getInboundTagList())) return false;
    if (!getProtocolList()
        .equals(other.getProtocolList())) return false;
    if (!getAttributes()
        .equals(other.getAttributes())) return false;
    if (!getDomainMatcher()
        .equals(other.getDomainMatcher())) return false;
    if (!getTargetTagCase().equals(other.getTargetTagCase())) return false;
    switch (targetTagCase_) {
      case 1:
        if (!getTag()
            .equals(other.getTag())) return false;
        break;
      case 12:
        if (!getBalancingTag()
            .equals(other.getBalancingTag())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDomainCount() > 0) {
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomainList().hashCode();
    }
    if (getCidrCount() > 0) {
      hash = (37 * hash) + CIDR_FIELD_NUMBER;
      hash = (53 * hash) + getCidrList().hashCode();
    }
    if (getGeoipCount() > 0) {
      hash = (37 * hash) + GEOIP_FIELD_NUMBER;
      hash = (53 * hash) + getGeoipList().hashCode();
    }
    if (hasPortRange()) {
      hash = (37 * hash) + PORT_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getPortRange().hashCode();
    }
    if (hasPortList()) {
      hash = (37 * hash) + PORT_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getPortList().hashCode();
    }
    if (hasNetworkList()) {
      hash = (37 * hash) + NETWORK_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkList().hashCode();
    }
    if (getNetworksCount() > 0) {
      hash = (37 * hash) + NETWORKS_FIELD_NUMBER;
      hash = (53 * hash) + networks_.hashCode();
    }
    if (getSourceCidrCount() > 0) {
      hash = (37 * hash) + SOURCE_CIDR_FIELD_NUMBER;
      hash = (53 * hash) + getSourceCidrList().hashCode();
    }
    if (getSourceGeoipCount() > 0) {
      hash = (37 * hash) + SOURCE_GEOIP_FIELD_NUMBER;
      hash = (53 * hash) + getSourceGeoipList().hashCode();
    }
    if (hasSourcePortList()) {
      hash = (37 * hash) + SOURCE_PORT_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getSourcePortList().hashCode();
    }
    if (getUserEmailCount() > 0) {
      hash = (37 * hash) + USER_EMAIL_FIELD_NUMBER;
      hash = (53 * hash) + getUserEmailList().hashCode();
    }
    if (getInboundTagCount() > 0) {
      hash = (37 * hash) + INBOUND_TAG_FIELD_NUMBER;
      hash = (53 * hash) + getInboundTagList().hashCode();
    }
    if (getProtocolCount() > 0) {
      hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getProtocolList().hashCode();
    }
    hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
    hash = (53 * hash) + getAttributes().hashCode();
    hash = (37 * hash) + DOMAIN_MATCHER_FIELD_NUMBER;
    hash = (53 * hash) + getDomainMatcher().hashCode();
    switch (targetTagCase_) {
      case 1:
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag().hashCode();
        break;
      case 12:
        hash = (37 * hash) + BALANCING_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getBalancingTag().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.router.RoutingRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.RoutingRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.app.router.RoutingRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.v2ray.core.app.router.RoutingRule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v2ray.core.app.router.RoutingRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v2ray.core.app.router.RoutingRule)
      com.v2ray.core.app.router.RoutingRuleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_RoutingRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_RoutingRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.app.router.RoutingRule.class, com.v2ray.core.app.router.RoutingRule.Builder.class);
    }

    // Construct using com.v2ray.core.app.router.RoutingRule.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (domainBuilder_ == null) {
        domain_ = java.util.Collections.emptyList();
      } else {
        domain_ = null;
        domainBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (cidrBuilder_ == null) {
        cidr_ = java.util.Collections.emptyList();
      } else {
        cidr_ = null;
        cidrBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (geoipBuilder_ == null) {
        geoip_ = java.util.Collections.emptyList();
      } else {
        geoip_ = null;
        geoipBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (portRangeBuilder_ == null) {
        portRange_ = null;
      } else {
        portRange_ = null;
        portRangeBuilder_ = null;
      }
      if (portListBuilder_ == null) {
        portList_ = null;
      } else {
        portList_ = null;
        portListBuilder_ = null;
      }
      if (networkListBuilder_ == null) {
        networkList_ = null;
      } else {
        networkList_ = null;
        networkListBuilder_ = null;
      }
      networks_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      if (sourceCidrBuilder_ == null) {
        sourceCidr_ = java.util.Collections.emptyList();
      } else {
        sourceCidr_ = null;
        sourceCidrBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (sourceGeoipBuilder_ == null) {
        sourceGeoip_ = java.util.Collections.emptyList();
      } else {
        sourceGeoip_ = null;
        sourceGeoipBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (sourcePortListBuilder_ == null) {
        sourcePortList_ = null;
      } else {
        sourcePortList_ = null;
        sourcePortListBuilder_ = null;
      }
      userEmail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      inboundTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000080);
      protocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      attributes_ = "";

      domainMatcher_ = "";

      targetTagCase_ = 0;
      targetTag_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.v2ray.core.app.router.ConfigOuterClass.internal_static_v2ray_core_app_router_RoutingRule_descriptor;
    }

    @java.lang.Override
    public com.v2ray.core.app.router.RoutingRule getDefaultInstanceForType() {
      return com.v2ray.core.app.router.RoutingRule.getDefaultInstance();
    }

    @java.lang.Override
    public com.v2ray.core.app.router.RoutingRule build() {
      com.v2ray.core.app.router.RoutingRule result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.v2ray.core.app.router.RoutingRule buildPartial() {
      com.v2ray.core.app.router.RoutingRule result = new com.v2ray.core.app.router.RoutingRule(this);
      int from_bitField0_ = bitField0_;
      if (targetTagCase_ == 1) {
        result.targetTag_ = targetTag_;
      }
      if (targetTagCase_ == 12) {
        result.targetTag_ = targetTag_;
      }
      if (domainBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          domain_ = java.util.Collections.unmodifiableList(domain_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.domain_ = domain_;
      } else {
        result.domain_ = domainBuilder_.build();
      }
      if (cidrBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          cidr_ = java.util.Collections.unmodifiableList(cidr_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cidr_ = cidr_;
      } else {
        result.cidr_ = cidrBuilder_.build();
      }
      if (geoipBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          geoip_ = java.util.Collections.unmodifiableList(geoip_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.geoip_ = geoip_;
      } else {
        result.geoip_ = geoipBuilder_.build();
      }
      if (portRangeBuilder_ == null) {
        result.portRange_ = portRange_;
      } else {
        result.portRange_ = portRangeBuilder_.build();
      }
      if (portListBuilder_ == null) {
        result.portList_ = portList_;
      } else {
        result.portList_ = portListBuilder_.build();
      }
      if (networkListBuilder_ == null) {
        result.networkList_ = networkList_;
      } else {
        result.networkList_ = networkListBuilder_.build();
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        networks_ = java.util.Collections.unmodifiableList(networks_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.networks_ = networks_;
      if (sourceCidrBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          sourceCidr_ = java.util.Collections.unmodifiableList(sourceCidr_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.sourceCidr_ = sourceCidr_;
      } else {
        result.sourceCidr_ = sourceCidrBuilder_.build();
      }
      if (sourceGeoipBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          sourceGeoip_ = java.util.Collections.unmodifiableList(sourceGeoip_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.sourceGeoip_ = sourceGeoip_;
      } else {
        result.sourceGeoip_ = sourceGeoipBuilder_.build();
      }
      if (sourcePortListBuilder_ == null) {
        result.sourcePortList_ = sourcePortList_;
      } else {
        result.sourcePortList_ = sourcePortListBuilder_.build();
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        userEmail_ = userEmail_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.userEmail_ = userEmail_;
      if (((bitField0_ & 0x00000080) != 0)) {
        inboundTag_ = inboundTag_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.inboundTag_ = inboundTag_;
      if (((bitField0_ & 0x00000100) != 0)) {
        protocol_ = protocol_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.protocol_ = protocol_;
      result.attributes_ = attributes_;
      result.domainMatcher_ = domainMatcher_;
      result.targetTagCase_ = targetTagCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.v2ray.core.app.router.RoutingRule) {
        return mergeFrom((com.v2ray.core.app.router.RoutingRule)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.v2ray.core.app.router.RoutingRule other) {
      if (other == com.v2ray.core.app.router.RoutingRule.getDefaultInstance()) return this;
      if (domainBuilder_ == null) {
        if (!other.domain_.isEmpty()) {
          if (domain_.isEmpty()) {
            domain_ = other.domain_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDomainIsMutable();
            domain_.addAll(other.domain_);
          }
          onChanged();
        }
      } else {
        if (!other.domain_.isEmpty()) {
          if (domainBuilder_.isEmpty()) {
            domainBuilder_.dispose();
            domainBuilder_ = null;
            domain_ = other.domain_;
            bitField0_ = (bitField0_ & ~0x00000001);
            domainBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDomainFieldBuilder() : null;
          } else {
            domainBuilder_.addAllMessages(other.domain_);
          }
        }
      }
      if (cidrBuilder_ == null) {
        if (!other.cidr_.isEmpty()) {
          if (cidr_.isEmpty()) {
            cidr_ = other.cidr_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCidrIsMutable();
            cidr_.addAll(other.cidr_);
          }
          onChanged();
        }
      } else {
        if (!other.cidr_.isEmpty()) {
          if (cidrBuilder_.isEmpty()) {
            cidrBuilder_.dispose();
            cidrBuilder_ = null;
            cidr_ = other.cidr_;
            bitField0_ = (bitField0_ & ~0x00000002);
            cidrBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCidrFieldBuilder() : null;
          } else {
            cidrBuilder_.addAllMessages(other.cidr_);
          }
        }
      }
      if (geoipBuilder_ == null) {
        if (!other.geoip_.isEmpty()) {
          if (geoip_.isEmpty()) {
            geoip_ = other.geoip_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureGeoipIsMutable();
            geoip_.addAll(other.geoip_);
          }
          onChanged();
        }
      } else {
        if (!other.geoip_.isEmpty()) {
          if (geoipBuilder_.isEmpty()) {
            geoipBuilder_.dispose();
            geoipBuilder_ = null;
            geoip_ = other.geoip_;
            bitField0_ = (bitField0_ & ~0x00000004);
            geoipBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGeoipFieldBuilder() : null;
          } else {
            geoipBuilder_.addAllMessages(other.geoip_);
          }
        }
      }
      if (other.hasPortRange()) {
        mergePortRange(other.getPortRange());
      }
      if (other.hasPortList()) {
        mergePortList(other.getPortList());
      }
      if (other.hasNetworkList()) {
        mergeNetworkList(other.getNetworkList());
      }
      if (!other.networks_.isEmpty()) {
        if (networks_.isEmpty()) {
          networks_ = other.networks_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureNetworksIsMutable();
          networks_.addAll(other.networks_);
        }
        onChanged();
      }
      if (sourceCidrBuilder_ == null) {
        if (!other.sourceCidr_.isEmpty()) {
          if (sourceCidr_.isEmpty()) {
            sourceCidr_ = other.sourceCidr_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSourceCidrIsMutable();
            sourceCidr_.addAll(other.sourceCidr_);
          }
          onChanged();
        }
      } else {
        if (!other.sourceCidr_.isEmpty()) {
          if (sourceCidrBuilder_.isEmpty()) {
            sourceCidrBuilder_.dispose();
            sourceCidrBuilder_ = null;
            sourceCidr_ = other.sourceCidr_;
            bitField0_ = (bitField0_ & ~0x00000010);
            sourceCidrBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSourceCidrFieldBuilder() : null;
          } else {
            sourceCidrBuilder_.addAllMessages(other.sourceCidr_);
          }
        }
      }
      if (sourceGeoipBuilder_ == null) {
        if (!other.sourceGeoip_.isEmpty()) {
          if (sourceGeoip_.isEmpty()) {
            sourceGeoip_ = other.sourceGeoip_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSourceGeoipIsMutable();
            sourceGeoip_.addAll(other.sourceGeoip_);
          }
          onChanged();
        }
      } else {
        if (!other.sourceGeoip_.isEmpty()) {
          if (sourceGeoipBuilder_.isEmpty()) {
            sourceGeoipBuilder_.dispose();
            sourceGeoipBuilder_ = null;
            sourceGeoip_ = other.sourceGeoip_;
            bitField0_ = (bitField0_ & ~0x00000020);
            sourceGeoipBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSourceGeoipFieldBuilder() : null;
          } else {
            sourceGeoipBuilder_.addAllMessages(other.sourceGeoip_);
          }
        }
      }
      if (other.hasSourcePortList()) {
        mergeSourcePortList(other.getSourcePortList());
      }
      if (!other.userEmail_.isEmpty()) {
        if (userEmail_.isEmpty()) {
          userEmail_ = other.userEmail_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureUserEmailIsMutable();
          userEmail_.addAll(other.userEmail_);
        }
        onChanged();
      }
      if (!other.inboundTag_.isEmpty()) {
        if (inboundTag_.isEmpty()) {
          inboundTag_ = other.inboundTag_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureInboundTagIsMutable();
          inboundTag_.addAll(other.inboundTag_);
        }
        onChanged();
      }
      if (!other.protocol_.isEmpty()) {
        if (protocol_.isEmpty()) {
          protocol_ = other.protocol_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureProtocolIsMutable();
          protocol_.addAll(other.protocol_);
        }
        onChanged();
      }
      if (!other.getAttributes().isEmpty()) {
        attributes_ = other.attributes_;
        onChanged();
      }
      if (!other.getDomainMatcher().isEmpty()) {
        domainMatcher_ = other.domainMatcher_;
        onChanged();
      }
      switch (other.getTargetTagCase()) {
        case TAG: {
          targetTagCase_ = 1;
          targetTag_ = other.targetTag_;
          onChanged();
          break;
        }
        case BALANCING_TAG: {
          targetTagCase_ = 12;
          targetTag_ = other.targetTag_;
          onChanged();
          break;
        }
        case TARGETTAG_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              targetTagCase_ = 1;
              targetTag_ = s;
              break;
            } // case 10
            case 18: {
              com.v2ray.core.app.router.Domain m =
                  input.readMessage(
                      com.v2ray.core.app.router.Domain.parser(),
                      extensionRegistry);
              if (domainBuilder_ == null) {
                ensureDomainIsMutable();
                domain_.add(m);
              } else {
                domainBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.v2ray.core.app.router.CIDR m =
                  input.readMessage(
                      com.v2ray.core.app.router.CIDR.parser(),
                      extensionRegistry);
              if (cidrBuilder_ == null) {
                ensureCidrIsMutable();
                cidr_.add(m);
              } else {
                cidrBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getPortRangeFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getNetworkListFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 42
            case 50: {
              com.v2ray.core.app.router.CIDR m =
                  input.readMessage(
                      com.v2ray.core.app.router.CIDR.parser(),
                      extensionRegistry);
              if (sourceCidrBuilder_ == null) {
                ensureSourceCidrIsMutable();
                sourceCidr_.add(m);
              } else {
                sourceCidrBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureUserEmailIsMutable();
              userEmail_.add(s);
              break;
            } // case 58
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureInboundTagIsMutable();
              inboundTag_.add(s);
              break;
            } // case 66
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureProtocolIsMutable();
              protocol_.add(s);
              break;
            } // case 74
            case 82: {
              com.v2ray.core.app.router.GeoIP m =
                  input.readMessage(
                      com.v2ray.core.app.router.GeoIP.parser(),
                      extensionRegistry);
              if (geoipBuilder_ == null) {
                ensureGeoipIsMutable();
                geoip_.add(m);
              } else {
                geoipBuilder_.addMessage(m);
              }
              break;
            } // case 82
            case 90: {
              com.v2ray.core.app.router.GeoIP m =
                  input.readMessage(
                      com.v2ray.core.app.router.GeoIP.parser(),
                      extensionRegistry);
              if (sourceGeoipBuilder_ == null) {
                ensureSourceGeoipIsMutable();
                sourceGeoip_.add(m);
              } else {
                sourceGeoipBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();
              targetTagCase_ = 12;
              targetTag_ = s;
              break;
            } // case 98
            case 104: {
              int tmpRaw = input.readEnum();
              ensureNetworksIsMutable();
              networks_.add(tmpRaw);
              break;
            } // case 104
            case 106: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureNetworksIsMutable();
                networks_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getPortListFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 114
            case 122: {
              attributes_ = input.readStringRequireUtf8();

              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getSourcePortListFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 130
            case 138: {
              domainMatcher_ = input.readStringRequireUtf8();

              break;
            } // case 138
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int targetTagCase_ = 0;
    private java.lang.Object targetTag_;
    public TargetTagCase
        getTargetTagCase() {
      return TargetTagCase.forNumber(
          targetTagCase_);
    }

    public Builder clearTargetTag() {
      targetTagCase_ = 0;
      targetTag_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return targetTagCase_ == 1;
    }
    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @return The tag.
     */
    @java.lang.Override
    public java.lang.String getTag() {
      java.lang.Object ref = "";
      if (targetTagCase_ == 1) {
        ref = targetTag_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetTagCase_ == 1) {
          targetTag_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @return The bytes for tag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTagBytes() {
      java.lang.Object ref = "";
      if (targetTagCase_ == 1) {
        ref = targetTag_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetTagCase_ == 1) {
          targetTag_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @param value The tag to set.
     * @return This builder for chaining.
     */
    public Builder setTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  targetTagCase_ = 1;
      targetTag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTag() {
      if (targetTagCase_ == 1) {
        targetTagCase_ = 0;
        targetTag_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Tag of outbound that this rule is pointing to.
     * </pre>
     *
     * <code>string tag = 1;</code>
     * @param value The bytes for tag to set.
     * @return This builder for chaining.
     */
    public Builder setTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      targetTagCase_ = 1;
      targetTag_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @return Whether the balancingTag field is set.
     */
    @java.lang.Override
    public boolean hasBalancingTag() {
      return targetTagCase_ == 12;
    }
    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @return The balancingTag.
     */
    @java.lang.Override
    public java.lang.String getBalancingTag() {
      java.lang.Object ref = "";
      if (targetTagCase_ == 12) {
        ref = targetTag_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetTagCase_ == 12) {
          targetTag_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @return The bytes for balancingTag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBalancingTagBytes() {
      java.lang.Object ref = "";
      if (targetTagCase_ == 12) {
        ref = targetTag_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetTagCase_ == 12) {
          targetTag_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @param value The balancingTag to set.
     * @return This builder for chaining.
     */
    public Builder setBalancingTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  targetTagCase_ = 12;
      targetTag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearBalancingTag() {
      if (targetTagCase_ == 12) {
        targetTagCase_ = 0;
        targetTag_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Tag of routing balancer.
     * </pre>
     *
     * <code>string balancing_tag = 12;</code>
     * @param value The bytes for balancingTag to set.
     * @return This builder for chaining.
     */
    public Builder setBalancingTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      targetTagCase_ = 12;
      targetTag_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.v2ray.core.app.router.Domain> domain_ =
      java.util.Collections.emptyList();
    private void ensureDomainIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        domain_ = new java.util.ArrayList<com.v2ray.core.app.router.Domain>(domain_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.Domain, com.v2ray.core.app.router.Domain.Builder, com.v2ray.core.app.router.DomainOrBuilder> domainBuilder_;

    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.router.Domain> getDomainList() {
      if (domainBuilder_ == null) {
        return java.util.Collections.unmodifiableList(domain_);
      } else {
        return domainBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public int getDomainCount() {
      if (domainBuilder_ == null) {
        return domain_.size();
      } else {
        return domainBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public com.v2ray.core.app.router.Domain getDomain(int index) {
      if (domainBuilder_ == null) {
        return domain_.get(index);
      } else {
        return domainBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder setDomain(
        int index, com.v2ray.core.app.router.Domain value) {
      if (domainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDomainIsMutable();
        domain_.set(index, value);
        onChanged();
      } else {
        domainBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder setDomain(
        int index, com.v2ray.core.app.router.Domain.Builder builderForValue) {
      if (domainBuilder_ == null) {
        ensureDomainIsMutable();
        domain_.set(index, builderForValue.build());
        onChanged();
      } else {
        domainBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder addDomain(com.v2ray.core.app.router.Domain value) {
      if (domainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDomainIsMutable();
        domain_.add(value);
        onChanged();
      } else {
        domainBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder addDomain(
        int index, com.v2ray.core.app.router.Domain value) {
      if (domainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDomainIsMutable();
        domain_.add(index, value);
        onChanged();
      } else {
        domainBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder addDomain(
        com.v2ray.core.app.router.Domain.Builder builderForValue) {
      if (domainBuilder_ == null) {
        ensureDomainIsMutable();
        domain_.add(builderForValue.build());
        onChanged();
      } else {
        domainBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder addDomain(
        int index, com.v2ray.core.app.router.Domain.Builder builderForValue) {
      if (domainBuilder_ == null) {
        ensureDomainIsMutable();
        domain_.add(index, builderForValue.build());
        onChanged();
      } else {
        domainBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder addAllDomain(
        java.lang.Iterable<? extends com.v2ray.core.app.router.Domain> values) {
      if (domainBuilder_ == null) {
        ensureDomainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, domain_);
        onChanged();
      } else {
        domainBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder clearDomain() {
      if (domainBuilder_ == null) {
        domain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        domainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public Builder removeDomain(int index) {
      if (domainBuilder_ == null) {
        ensureDomainIsMutable();
        domain_.remove(index);
        onChanged();
      } else {
        domainBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public com.v2ray.core.app.router.Domain.Builder getDomainBuilder(
        int index) {
      return getDomainFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public com.v2ray.core.app.router.DomainOrBuilder getDomainOrBuilder(
        int index) {
      if (domainBuilder_ == null) {
        return domain_.get(index);  } else {
        return domainBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.router.DomainOrBuilder> 
         getDomainOrBuilderList() {
      if (domainBuilder_ != null) {
        return domainBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(domain_);
      }
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public com.v2ray.core.app.router.Domain.Builder addDomainBuilder() {
      return getDomainFieldBuilder().addBuilder(
          com.v2ray.core.app.router.Domain.getDefaultInstance());
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public com.v2ray.core.app.router.Domain.Builder addDomainBuilder(
        int index) {
      return getDomainFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.Domain.getDefaultInstance());
    }
    /**
     * <pre>
     * List of domains for target domain matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.Domain domain = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.router.Domain.Builder> 
         getDomainBuilderList() {
      return getDomainFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.Domain, com.v2ray.core.app.router.Domain.Builder, com.v2ray.core.app.router.DomainOrBuilder> 
        getDomainFieldBuilder() {
      if (domainBuilder_ == null) {
        domainBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.Domain, com.v2ray.core.app.router.Domain.Builder, com.v2ray.core.app.router.DomainOrBuilder>(
                domain_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        domain_ = null;
      }
      return domainBuilder_;
    }

    private java.util.List<com.v2ray.core.app.router.CIDR> cidr_ =
      java.util.Collections.emptyList();
    private void ensureCidrIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        cidr_ = new java.util.ArrayList<com.v2ray.core.app.router.CIDR>(cidr_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder> cidrBuilder_;

    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR> getCidrList() {
      if (cidrBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cidr_);
      } else {
        return cidrBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getCidrCount() {
      if (cidrBuilder_ == null) {
        return cidr_.size();
      } else {
        return cidrBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR getCidr(int index) {
      if (cidrBuilder_ == null) {
        return cidr_.get(index);
      } else {
        return cidrBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setCidr(
        int index, com.v2ray.core.app.router.CIDR value) {
      if (cidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCidrIsMutable();
        cidr_.set(index, value);
        onChanged();
      } else {
        cidrBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setCidr(
        int index, com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (cidrBuilder_ == null) {
        ensureCidrIsMutable();
        cidr_.set(index, builderForValue.build());
        onChanged();
      } else {
        cidrBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addCidr(com.v2ray.core.app.router.CIDR value) {
      if (cidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCidrIsMutable();
        cidr_.add(value);
        onChanged();
      } else {
        cidrBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addCidr(
        int index, com.v2ray.core.app.router.CIDR value) {
      if (cidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCidrIsMutable();
        cidr_.add(index, value);
        onChanged();
      } else {
        cidrBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addCidr(
        com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (cidrBuilder_ == null) {
        ensureCidrIsMutable();
        cidr_.add(builderForValue.build());
        onChanged();
      } else {
        cidrBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addCidr(
        int index, com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (cidrBuilder_ == null) {
        ensureCidrIsMutable();
        cidr_.add(index, builderForValue.build());
        onChanged();
      } else {
        cidrBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllCidr(
        java.lang.Iterable<? extends com.v2ray.core.app.router.CIDR> values) {
      if (cidrBuilder_ == null) {
        ensureCidrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cidr_);
        onChanged();
      } else {
        cidrBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearCidr() {
      if (cidrBuilder_ == null) {
        cidr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        cidrBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeCidr(int index) {
      if (cidrBuilder_ == null) {
        ensureCidrIsMutable();
        cidr_.remove(index);
        onChanged();
      } else {
        cidrBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder getCidrBuilder(
        int index) {
      return getCidrFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDROrBuilder getCidrOrBuilder(
        int index) {
      if (cidrBuilder_ == null) {
        return cidr_.get(index);  } else {
        return cidrBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends com.v2ray.core.app.router.CIDROrBuilder> 
         getCidrOrBuilderList() {
      if (cidrBuilder_ != null) {
        return cidrBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cidr_);
      }
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder addCidrBuilder() {
      return getCidrFieldBuilder().addBuilder(
          com.v2ray.core.app.router.CIDR.getDefaultInstance());
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder addCidrBuilder(
        int index) {
      return getCidrFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.CIDR.getDefaultInstance());
    }
    /**
     * <pre>
     * List of CIDRs for target IP address matching.
     * Deprecated. Use geoip below.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR cidr = 3 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR.Builder> 
         getCidrBuilderList() {
      return getCidrFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder> 
        getCidrFieldBuilder() {
      if (cidrBuilder_ == null) {
        cidrBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder>(
                cidr_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        cidr_ = null;
      }
      return cidrBuilder_;
    }

    private java.util.List<com.v2ray.core.app.router.GeoIP> geoip_ =
      java.util.Collections.emptyList();
    private void ensureGeoipIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        geoip_ = new java.util.ArrayList<com.v2ray.core.app.router.GeoIP>(geoip_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder> geoipBuilder_;

    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public java.util.List<com.v2ray.core.app.router.GeoIP> getGeoipList() {
      if (geoipBuilder_ == null) {
        return java.util.Collections.unmodifiableList(geoip_);
      } else {
        return geoipBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public int getGeoipCount() {
      if (geoipBuilder_ == null) {
        return geoip_.size();
      } else {
        return geoipBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public com.v2ray.core.app.router.GeoIP getGeoip(int index) {
      if (geoipBuilder_ == null) {
        return geoip_.get(index);
      } else {
        return geoipBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder setGeoip(
        int index, com.v2ray.core.app.router.GeoIP value) {
      if (geoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeoipIsMutable();
        geoip_.set(index, value);
        onChanged();
      } else {
        geoipBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder setGeoip(
        int index, com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (geoipBuilder_ == null) {
        ensureGeoipIsMutable();
        geoip_.set(index, builderForValue.build());
        onChanged();
      } else {
        geoipBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder addGeoip(com.v2ray.core.app.router.GeoIP value) {
      if (geoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeoipIsMutable();
        geoip_.add(value);
        onChanged();
      } else {
        geoipBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder addGeoip(
        int index, com.v2ray.core.app.router.GeoIP value) {
      if (geoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeoipIsMutable();
        geoip_.add(index, value);
        onChanged();
      } else {
        geoipBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder addGeoip(
        com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (geoipBuilder_ == null) {
        ensureGeoipIsMutable();
        geoip_.add(builderForValue.build());
        onChanged();
      } else {
        geoipBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder addGeoip(
        int index, com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (geoipBuilder_ == null) {
        ensureGeoipIsMutable();
        geoip_.add(index, builderForValue.build());
        onChanged();
      } else {
        geoipBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder addAllGeoip(
        java.lang.Iterable<? extends com.v2ray.core.app.router.GeoIP> values) {
      if (geoipBuilder_ == null) {
        ensureGeoipIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, geoip_);
        onChanged();
      } else {
        geoipBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder clearGeoip() {
      if (geoipBuilder_ == null) {
        geoip_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        geoipBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public Builder removeGeoip(int index) {
      if (geoipBuilder_ == null) {
        ensureGeoipIsMutable();
        geoip_.remove(index);
        onChanged();
      } else {
        geoipBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder getGeoipBuilder(
        int index) {
      return getGeoipFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public com.v2ray.core.app.router.GeoIPOrBuilder getGeoipOrBuilder(
        int index) {
      if (geoipBuilder_ == null) {
        return geoip_.get(index);  } else {
        return geoipBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.router.GeoIPOrBuilder> 
         getGeoipOrBuilderList() {
      if (geoipBuilder_ != null) {
        return geoipBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(geoip_);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder addGeoipBuilder() {
      return getGeoipFieldBuilder().addBuilder(
          com.v2ray.core.app.router.GeoIP.getDefaultInstance());
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder addGeoipBuilder(
        int index) {
      return getGeoipFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.GeoIP.getDefaultInstance());
    }
    /**
     * <pre>
     * List of GeoIPs for target IP address matching. If this entry exists, the
     * cidr above will have no effect. GeoIP fields with the same country code are
     * supposed to contain exactly same content. They will be merged during
     * runtime. For customized GeoIPs, please leave country code empty.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP geoip = 10;</code>
     */
    public java.util.List<com.v2ray.core.app.router.GeoIP.Builder> 
         getGeoipBuilderList() {
      return getGeoipFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder> 
        getGeoipFieldBuilder() {
      if (geoipBuilder_ == null) {
        geoipBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder>(
                geoip_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        geoip_ = null;
      }
      return geoipBuilder_;
    }

    private com.v2ray.core.common.net.PortRange portRange_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortRange, com.v2ray.core.common.net.PortRange.Builder, com.v2ray.core.common.net.PortRangeOrBuilder> portRangeBuilder_;
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     * @deprecated v2ray.core.app.router.RoutingRule.port_range is deprecated.
     *     See app/router/config.proto;l=96
     * @return Whether the portRange field is set.
     */
    @java.lang.Deprecated public boolean hasPortRange() {
      return portRangeBuilder_ != null || portRange_ != null;
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     * @deprecated v2ray.core.app.router.RoutingRule.port_range is deprecated.
     *     See app/router/config.proto;l=96
     * @return The portRange.
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.PortRange getPortRange() {
      if (portRangeBuilder_ == null) {
        return portRange_ == null ? com.v2ray.core.common.net.PortRange.getDefaultInstance() : portRange_;
      } else {
        return portRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setPortRange(com.v2ray.core.common.net.PortRange value) {
      if (portRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        portRange_ = value;
        onChanged();
      } else {
        portRangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setPortRange(
        com.v2ray.core.common.net.PortRange.Builder builderForValue) {
      if (portRangeBuilder_ == null) {
        portRange_ = builderForValue.build();
        onChanged();
      } else {
        portRangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergePortRange(com.v2ray.core.common.net.PortRange value) {
      if (portRangeBuilder_ == null) {
        if (portRange_ != null) {
          portRange_ =
            com.v2ray.core.common.net.PortRange.newBuilder(portRange_).mergeFrom(value).buildPartial();
        } else {
          portRange_ = value;
        }
        onChanged();
      } else {
        portRangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearPortRange() {
      if (portRangeBuilder_ == null) {
        portRange_ = null;
        onChanged();
      } else {
        portRange_ = null;
        portRangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.PortRange.Builder getPortRangeBuilder() {
      
      onChanged();
      return getPortRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.PortRangeOrBuilder getPortRangeOrBuilder() {
      if (portRangeBuilder_ != null) {
        return portRangeBuilder_.getMessageOrBuilder();
      } else {
        return portRange_ == null ?
            com.v2ray.core.common.net.PortRange.getDefaultInstance() : portRange_;
      }
    }
    /**
     * <pre>
     * A range of port [from, to]. If the destination port is in this range, this
     * rule takes effect. Deprecated. Use port_list.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortRange port_range = 4 [deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortRange, com.v2ray.core.common.net.PortRange.Builder, com.v2ray.core.common.net.PortRangeOrBuilder> 
        getPortRangeFieldBuilder() {
      if (portRangeBuilder_ == null) {
        portRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.common.net.PortRange, com.v2ray.core.common.net.PortRange.Builder, com.v2ray.core.common.net.PortRangeOrBuilder>(
                getPortRange(),
                getParentForChildren(),
                isClean());
        portRange_ = null;
      }
      return portRangeBuilder_;
    }

    private com.v2ray.core.common.net.PortList portList_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder> portListBuilder_;
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     * @return Whether the portList field is set.
     */
    public boolean hasPortList() {
      return portListBuilder_ != null || portList_ != null;
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     * @return The portList.
     */
    public com.v2ray.core.common.net.PortList getPortList() {
      if (portListBuilder_ == null) {
        return portList_ == null ? com.v2ray.core.common.net.PortList.getDefaultInstance() : portList_;
      } else {
        return portListBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public Builder setPortList(com.v2ray.core.common.net.PortList value) {
      if (portListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        portList_ = value;
        onChanged();
      } else {
        portListBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public Builder setPortList(
        com.v2ray.core.common.net.PortList.Builder builderForValue) {
      if (portListBuilder_ == null) {
        portList_ = builderForValue.build();
        onChanged();
      } else {
        portListBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public Builder mergePortList(com.v2ray.core.common.net.PortList value) {
      if (portListBuilder_ == null) {
        if (portList_ != null) {
          portList_ =
            com.v2ray.core.common.net.PortList.newBuilder(portList_).mergeFrom(value).buildPartial();
        } else {
          portList_ = value;
        }
        onChanged();
      } else {
        portListBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public Builder clearPortList() {
      if (portListBuilder_ == null) {
        portList_ = null;
        onChanged();
      } else {
        portList_ = null;
        portListBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public com.v2ray.core.common.net.PortList.Builder getPortListBuilder() {
      
      onChanged();
      return getPortListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    public com.v2ray.core.common.net.PortListOrBuilder getPortListOrBuilder() {
      if (portListBuilder_ != null) {
        return portListBuilder_.getMessageOrBuilder();
      } else {
        return portList_ == null ?
            com.v2ray.core.common.net.PortList.getDefaultInstance() : portList_;
      }
    }
    /**
     * <pre>
     * List of ports.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList port_list = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder> 
        getPortListFieldBuilder() {
      if (portListBuilder_ == null) {
        portListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder>(
                getPortList(),
                getParentForChildren(),
                isClean());
        portList_ = null;
      }
      return portListBuilder_;
    }

    private com.v2ray.core.common.net.NetworkList networkList_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.NetworkList, com.v2ray.core.common.net.NetworkList.Builder, com.v2ray.core.common.net.NetworkListOrBuilder> networkListBuilder_;
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     * @deprecated v2ray.core.app.router.RoutingRule.network_list is deprecated.
     *     See app/router/config.proto;l=102
     * @return Whether the networkList field is set.
     */
    @java.lang.Deprecated public boolean hasNetworkList() {
      return networkListBuilder_ != null || networkList_ != null;
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     * @deprecated v2ray.core.app.router.RoutingRule.network_list is deprecated.
     *     See app/router/config.proto;l=102
     * @return The networkList.
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.NetworkList getNetworkList() {
      if (networkListBuilder_ == null) {
        return networkList_ == null ? com.v2ray.core.common.net.NetworkList.getDefaultInstance() : networkList_;
      } else {
        return networkListBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setNetworkList(com.v2ray.core.common.net.NetworkList value) {
      if (networkListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        networkList_ = value;
        onChanged();
      } else {
        networkListBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setNetworkList(
        com.v2ray.core.common.net.NetworkList.Builder builderForValue) {
      if (networkListBuilder_ == null) {
        networkList_ = builderForValue.build();
        onChanged();
      } else {
        networkListBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeNetworkList(com.v2ray.core.common.net.NetworkList value) {
      if (networkListBuilder_ == null) {
        if (networkList_ != null) {
          networkList_ =
            com.v2ray.core.common.net.NetworkList.newBuilder(networkList_).mergeFrom(value).buildPartial();
        } else {
          networkList_ = value;
        }
        onChanged();
      } else {
        networkListBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearNetworkList() {
      if (networkListBuilder_ == null) {
        networkList_ = null;
        onChanged();
      } else {
        networkList_ = null;
        networkListBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.NetworkList.Builder getNetworkListBuilder() {
      
      onChanged();
      return getNetworkListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.common.net.NetworkListOrBuilder getNetworkListOrBuilder() {
      if (networkListBuilder_ != null) {
        return networkListBuilder_.getMessageOrBuilder();
      } else {
        return networkList_ == null ?
            com.v2ray.core.common.net.NetworkList.getDefaultInstance() : networkList_;
      }
    }
    /**
     * <pre>
     * List of networks. Deprecated. Use networks.
     * </pre>
     *
     * <code>.v2ray.core.common.net.NetworkList network_list = 5 [deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.NetworkList, com.v2ray.core.common.net.NetworkList.Builder, com.v2ray.core.common.net.NetworkListOrBuilder> 
        getNetworkListFieldBuilder() {
      if (networkListBuilder_ == null) {
        networkListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.common.net.NetworkList, com.v2ray.core.common.net.NetworkList.Builder, com.v2ray.core.common.net.NetworkListOrBuilder>(
                getNetworkList(),
                getParentForChildren(),
                isClean());
        networkList_ = null;
      }
      return networkListBuilder_;
    }

    private java.util.List<java.lang.Integer> networks_ =
      java.util.Collections.emptyList();
    private void ensureNetworksIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        networks_ = new java.util.ArrayList<java.lang.Integer>(networks_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @return A list containing the networks.
     */
    public java.util.List<com.v2ray.core.common.net.Network> getNetworksList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.v2ray.core.common.net.Network>(networks_, networks_converter_);
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @return The count of networks.
     */
    public int getNetworksCount() {
      return networks_.size();
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param index The index of the element to return.
     * @return The networks at the given index.
     */
    public com.v2ray.core.common.net.Network getNetworks(int index) {
      return networks_converter_.convert(networks_.get(index));
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param index The index to set the value at.
     * @param value The networks to set.
     * @return This builder for chaining.
     */
    public Builder setNetworks(
        int index, com.v2ray.core.common.net.Network value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNetworksIsMutable();
      networks_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param value The networks to add.
     * @return This builder for chaining.
     */
    public Builder addNetworks(com.v2ray.core.common.net.Network value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNetworksIsMutable();
      networks_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param values The networks to add.
     * @return This builder for chaining.
     */
    public Builder addAllNetworks(
        java.lang.Iterable<? extends com.v2ray.core.common.net.Network> values) {
      ensureNetworksIsMutable();
      for (com.v2ray.core.common.net.Network value : values) {
        networks_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearNetworks() {
      networks_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @return A list containing the enum numeric values on the wire for networks.
     */
    public java.util.List<java.lang.Integer>
    getNetworksValueList() {
      return java.util.Collections.unmodifiableList(networks_);
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of networks at the given index.
     */
    public int getNetworksValue(int index) {
      return networks_.get(index);
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for networks to set.
     * @return This builder for chaining.
     */
    public Builder setNetworksValue(
        int index, int value) {
      ensureNetworksIsMutable();
      networks_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param value The enum numeric value on the wire for networks to add.
     * @return This builder for chaining.
     */
    public Builder addNetworksValue(int value) {
      ensureNetworksIsMutable();
      networks_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of networks for matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.net.Network networks = 13;</code>
     * @param values The enum numeric values on the wire for networks to add.
     * @return This builder for chaining.
     */
    public Builder addAllNetworksValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureNetworksIsMutable();
      for (int value : values) {
        networks_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<com.v2ray.core.app.router.CIDR> sourceCidr_ =
      java.util.Collections.emptyList();
    private void ensureSourceCidrIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        sourceCidr_ = new java.util.ArrayList<com.v2ray.core.app.router.CIDR>(sourceCidr_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder> sourceCidrBuilder_;

    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR> getSourceCidrList() {
      if (sourceCidrBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sourceCidr_);
      } else {
        return sourceCidrBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getSourceCidrCount() {
      if (sourceCidrBuilder_ == null) {
        return sourceCidr_.size();
      } else {
        return sourceCidrBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR getSourceCidr(int index) {
      if (sourceCidrBuilder_ == null) {
        return sourceCidr_.get(index);
      } else {
        return sourceCidrBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSourceCidr(
        int index, com.v2ray.core.app.router.CIDR value) {
      if (sourceCidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceCidrIsMutable();
        sourceCidr_.set(index, value);
        onChanged();
      } else {
        sourceCidrBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSourceCidr(
        int index, com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (sourceCidrBuilder_ == null) {
        ensureSourceCidrIsMutable();
        sourceCidr_.set(index, builderForValue.build());
        onChanged();
      } else {
        sourceCidrBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addSourceCidr(com.v2ray.core.app.router.CIDR value) {
      if (sourceCidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceCidrIsMutable();
        sourceCidr_.add(value);
        onChanged();
      } else {
        sourceCidrBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addSourceCidr(
        int index, com.v2ray.core.app.router.CIDR value) {
      if (sourceCidrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceCidrIsMutable();
        sourceCidr_.add(index, value);
        onChanged();
      } else {
        sourceCidrBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addSourceCidr(
        com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (sourceCidrBuilder_ == null) {
        ensureSourceCidrIsMutable();
        sourceCidr_.add(builderForValue.build());
        onChanged();
      } else {
        sourceCidrBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addSourceCidr(
        int index, com.v2ray.core.app.router.CIDR.Builder builderForValue) {
      if (sourceCidrBuilder_ == null) {
        ensureSourceCidrIsMutable();
        sourceCidr_.add(index, builderForValue.build());
        onChanged();
      } else {
        sourceCidrBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllSourceCidr(
        java.lang.Iterable<? extends com.v2ray.core.app.router.CIDR> values) {
      if (sourceCidrBuilder_ == null) {
        ensureSourceCidrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sourceCidr_);
        onChanged();
      } else {
        sourceCidrBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearSourceCidr() {
      if (sourceCidrBuilder_ == null) {
        sourceCidr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        sourceCidrBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeSourceCidr(int index) {
      if (sourceCidrBuilder_ == null) {
        ensureSourceCidrIsMutable();
        sourceCidr_.remove(index);
        onChanged();
      } else {
        sourceCidrBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder getSourceCidrBuilder(
        int index) {
      return getSourceCidrFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDROrBuilder getSourceCidrOrBuilder(
        int index) {
      if (sourceCidrBuilder_ == null) {
        return sourceCidr_.get(index);  } else {
        return sourceCidrBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends com.v2ray.core.app.router.CIDROrBuilder> 
         getSourceCidrOrBuilderList() {
      if (sourceCidrBuilder_ != null) {
        return sourceCidrBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sourceCidr_);
      }
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder addSourceCidrBuilder() {
      return getSourceCidrFieldBuilder().addBuilder(
          com.v2ray.core.app.router.CIDR.getDefaultInstance());
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.v2ray.core.app.router.CIDR.Builder addSourceCidrBuilder(
        int index) {
      return getSourceCidrFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.CIDR.getDefaultInstance());
    }
    /**
     * <pre>
     * List of CIDRs for source IP address matching.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.CIDR source_cidr = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.v2ray.core.app.router.CIDR.Builder> 
         getSourceCidrBuilderList() {
      return getSourceCidrFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder> 
        getSourceCidrFieldBuilder() {
      if (sourceCidrBuilder_ == null) {
        sourceCidrBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.CIDR, com.v2ray.core.app.router.CIDR.Builder, com.v2ray.core.app.router.CIDROrBuilder>(
                sourceCidr_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        sourceCidr_ = null;
      }
      return sourceCidrBuilder_;
    }

    private java.util.List<com.v2ray.core.app.router.GeoIP> sourceGeoip_ =
      java.util.Collections.emptyList();
    private void ensureSourceGeoipIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        sourceGeoip_ = new java.util.ArrayList<com.v2ray.core.app.router.GeoIP>(sourceGeoip_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder> sourceGeoipBuilder_;

    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public java.util.List<com.v2ray.core.app.router.GeoIP> getSourceGeoipList() {
      if (sourceGeoipBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sourceGeoip_);
      } else {
        return sourceGeoipBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public int getSourceGeoipCount() {
      if (sourceGeoipBuilder_ == null) {
        return sourceGeoip_.size();
      } else {
        return sourceGeoipBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public com.v2ray.core.app.router.GeoIP getSourceGeoip(int index) {
      if (sourceGeoipBuilder_ == null) {
        return sourceGeoip_.get(index);
      } else {
        return sourceGeoipBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder setSourceGeoip(
        int index, com.v2ray.core.app.router.GeoIP value) {
      if (sourceGeoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceGeoipIsMutable();
        sourceGeoip_.set(index, value);
        onChanged();
      } else {
        sourceGeoipBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder setSourceGeoip(
        int index, com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (sourceGeoipBuilder_ == null) {
        ensureSourceGeoipIsMutable();
        sourceGeoip_.set(index, builderForValue.build());
        onChanged();
      } else {
        sourceGeoipBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder addSourceGeoip(com.v2ray.core.app.router.GeoIP value) {
      if (sourceGeoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceGeoipIsMutable();
        sourceGeoip_.add(value);
        onChanged();
      } else {
        sourceGeoipBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder addSourceGeoip(
        int index, com.v2ray.core.app.router.GeoIP value) {
      if (sourceGeoipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceGeoipIsMutable();
        sourceGeoip_.add(index, value);
        onChanged();
      } else {
        sourceGeoipBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder addSourceGeoip(
        com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (sourceGeoipBuilder_ == null) {
        ensureSourceGeoipIsMutable();
        sourceGeoip_.add(builderForValue.build());
        onChanged();
      } else {
        sourceGeoipBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder addSourceGeoip(
        int index, com.v2ray.core.app.router.GeoIP.Builder builderForValue) {
      if (sourceGeoipBuilder_ == null) {
        ensureSourceGeoipIsMutable();
        sourceGeoip_.add(index, builderForValue.build());
        onChanged();
      } else {
        sourceGeoipBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder addAllSourceGeoip(
        java.lang.Iterable<? extends com.v2ray.core.app.router.GeoIP> values) {
      if (sourceGeoipBuilder_ == null) {
        ensureSourceGeoipIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sourceGeoip_);
        onChanged();
      } else {
        sourceGeoipBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder clearSourceGeoip() {
      if (sourceGeoipBuilder_ == null) {
        sourceGeoip_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        sourceGeoipBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public Builder removeSourceGeoip(int index) {
      if (sourceGeoipBuilder_ == null) {
        ensureSourceGeoipIsMutable();
        sourceGeoip_.remove(index);
        onChanged();
      } else {
        sourceGeoipBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder getSourceGeoipBuilder(
        int index) {
      return getSourceGeoipFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public com.v2ray.core.app.router.GeoIPOrBuilder getSourceGeoipOrBuilder(
        int index) {
      if (sourceGeoipBuilder_ == null) {
        return sourceGeoip_.get(index);  } else {
        return sourceGeoipBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.router.GeoIPOrBuilder> 
         getSourceGeoipOrBuilderList() {
      if (sourceGeoipBuilder_ != null) {
        return sourceGeoipBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sourceGeoip_);
      }
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder addSourceGeoipBuilder() {
      return getSourceGeoipFieldBuilder().addBuilder(
          com.v2ray.core.app.router.GeoIP.getDefaultInstance());
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public com.v2ray.core.app.router.GeoIP.Builder addSourceGeoipBuilder(
        int index) {
      return getSourceGeoipFieldBuilder().addBuilder(
          index, com.v2ray.core.app.router.GeoIP.getDefaultInstance());
    }
    /**
     * <pre>
     * List of GeoIPs for source IP address matching. If this entry exists, the
     * source_cidr above will have no effect.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.router.GeoIP source_geoip = 11;</code>
     */
    public java.util.List<com.v2ray.core.app.router.GeoIP.Builder> 
         getSourceGeoipBuilderList() {
      return getSourceGeoipFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder> 
        getSourceGeoipFieldBuilder() {
      if (sourceGeoipBuilder_ == null) {
        sourceGeoipBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.router.GeoIP, com.v2ray.core.app.router.GeoIP.Builder, com.v2ray.core.app.router.GeoIPOrBuilder>(
                sourceGeoip_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        sourceGeoip_ = null;
      }
      return sourceGeoipBuilder_;
    }

    private com.v2ray.core.common.net.PortList sourcePortList_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder> sourcePortListBuilder_;
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     * @return Whether the sourcePortList field is set.
     */
    public boolean hasSourcePortList() {
      return sourcePortListBuilder_ != null || sourcePortList_ != null;
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     * @return The sourcePortList.
     */
    public com.v2ray.core.common.net.PortList getSourcePortList() {
      if (sourcePortListBuilder_ == null) {
        return sourcePortList_ == null ? com.v2ray.core.common.net.PortList.getDefaultInstance() : sourcePortList_;
      } else {
        return sourcePortListBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public Builder setSourcePortList(com.v2ray.core.common.net.PortList value) {
      if (sourcePortListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourcePortList_ = value;
        onChanged();
      } else {
        sourcePortListBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public Builder setSourcePortList(
        com.v2ray.core.common.net.PortList.Builder builderForValue) {
      if (sourcePortListBuilder_ == null) {
        sourcePortList_ = builderForValue.build();
        onChanged();
      } else {
        sourcePortListBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public Builder mergeSourcePortList(com.v2ray.core.common.net.PortList value) {
      if (sourcePortListBuilder_ == null) {
        if (sourcePortList_ != null) {
          sourcePortList_ =
            com.v2ray.core.common.net.PortList.newBuilder(sourcePortList_).mergeFrom(value).buildPartial();
        } else {
          sourcePortList_ = value;
        }
        onChanged();
      } else {
        sourcePortListBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public Builder clearSourcePortList() {
      if (sourcePortListBuilder_ == null) {
        sourcePortList_ = null;
        onChanged();
      } else {
        sourcePortList_ = null;
        sourcePortListBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public com.v2ray.core.common.net.PortList.Builder getSourcePortListBuilder() {
      
      onChanged();
      return getSourcePortListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    public com.v2ray.core.common.net.PortListOrBuilder getSourcePortListOrBuilder() {
      if (sourcePortListBuilder_ != null) {
        return sourcePortListBuilder_.getMessageOrBuilder();
      } else {
        return sourcePortList_ == null ?
            com.v2ray.core.common.net.PortList.getDefaultInstance() : sourcePortList_;
      }
    }
    /**
     * <pre>
     * List of ports for source port matching.
     * </pre>
     *
     * <code>.v2ray.core.common.net.PortList source_port_list = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder> 
        getSourcePortListFieldBuilder() {
      if (sourcePortListBuilder_ == null) {
        sourcePortListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.common.net.PortList, com.v2ray.core.common.net.PortList.Builder, com.v2ray.core.common.net.PortListOrBuilder>(
                getSourcePortList(),
                getParentForChildren(),
                isClean());
        sourcePortList_ = null;
      }
      return sourcePortListBuilder_;
    }

    private com.google.protobuf.LazyStringList userEmail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureUserEmailIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        userEmail_ = new com.google.protobuf.LazyStringArrayList(userEmail_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @return A list containing the userEmail.
     */
    public com.google.protobuf.ProtocolStringList
        getUserEmailList() {
      return userEmail_.getUnmodifiableView();
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @return The count of userEmail.
     */
    public int getUserEmailCount() {
      return userEmail_.size();
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param index The index of the element to return.
     * @return The userEmail at the given index.
     */
    public java.lang.String getUserEmail(int index) {
      return userEmail_.get(index);
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userEmail at the given index.
     */
    public com.google.protobuf.ByteString
        getUserEmailBytes(int index) {
      return userEmail_.getByteString(index);
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param index The index to set the value at.
     * @param value The userEmail to set.
     * @return This builder for chaining.
     */
    public Builder setUserEmail(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureUserEmailIsMutable();
      userEmail_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param value The userEmail to add.
     * @return This builder for chaining.
     */
    public Builder addUserEmail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureUserEmailIsMutable();
      userEmail_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param values The userEmail to add.
     * @return This builder for chaining.
     */
    public Builder addAllUserEmail(
        java.lang.Iterable<java.lang.String> values) {
      ensureUserEmailIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, userEmail_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserEmail() {
      userEmail_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string user_email = 7;</code>
     * @param value The bytes of the userEmail to add.
     * @return This builder for chaining.
     */
    public Builder addUserEmailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureUserEmailIsMutable();
      userEmail_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList inboundTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureInboundTagIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        inboundTag_ = new com.google.protobuf.LazyStringArrayList(inboundTag_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @return A list containing the inboundTag.
     */
    public com.google.protobuf.ProtocolStringList
        getInboundTagList() {
      return inboundTag_.getUnmodifiableView();
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @return The count of inboundTag.
     */
    public int getInboundTagCount() {
      return inboundTag_.size();
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param index The index of the element to return.
     * @return The inboundTag at the given index.
     */
    public java.lang.String getInboundTag(int index) {
      return inboundTag_.get(index);
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the inboundTag at the given index.
     */
    public com.google.protobuf.ByteString
        getInboundTagBytes(int index) {
      return inboundTag_.getByteString(index);
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param index The index to set the value at.
     * @param value The inboundTag to set.
     * @return This builder for chaining.
     */
    public Builder setInboundTag(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInboundTagIsMutable();
      inboundTag_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param value The inboundTag to add.
     * @return This builder for chaining.
     */
    public Builder addInboundTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInboundTagIsMutable();
      inboundTag_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param values The inboundTag to add.
     * @return This builder for chaining.
     */
    public Builder addAllInboundTag(
        java.lang.Iterable<java.lang.String> values) {
      ensureInboundTagIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, inboundTag_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearInboundTag() {
      inboundTag_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string inbound_tag = 8;</code>
     * @param value The bytes of the inboundTag to add.
     * @return This builder for chaining.
     */
    public Builder addInboundTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureInboundTagIsMutable();
      inboundTag_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList protocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureProtocolIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        protocol_ = new com.google.protobuf.LazyStringArrayList(protocol_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @return A list containing the protocol.
     */
    public com.google.protobuf.ProtocolStringList
        getProtocolList() {
      return protocol_.getUnmodifiableView();
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @return The count of protocol.
     */
    public int getProtocolCount() {
      return protocol_.size();
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param index The index of the element to return.
     * @return The protocol at the given index.
     */
    public java.lang.String getProtocol(int index) {
      return protocol_.get(index);
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param index The index of the value to return.
     * @return The bytes of the protocol at the given index.
     */
    public com.google.protobuf.ByteString
        getProtocolBytes(int index) {
      return protocol_.getByteString(index);
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param index The index to set the value at.
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureProtocolIsMutable();
      protocol_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param value The protocol to add.
     * @return This builder for chaining.
     */
    public Builder addProtocol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureProtocolIsMutable();
      protocol_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param values The protocol to add.
     * @return This builder for chaining.
     */
    public Builder addAllProtocol(
        java.lang.Iterable<java.lang.String> values) {
      ensureProtocolIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, protocol_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {
      protocol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string protocol = 9;</code>
     * @param value The bytes of the protocol to add.
     * @return This builder for chaining.
     */
    public Builder addProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureProtocolIsMutable();
      protocol_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object attributes_ = "";
    /**
     * <code>string attributes = 15;</code>
     * @return The attributes.
     */
    public java.lang.String getAttributes() {
      java.lang.Object ref = attributes_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        attributes_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string attributes = 15;</code>
     * @return The bytes for attributes.
     */
    public com.google.protobuf.ByteString
        getAttributesBytes() {
      java.lang.Object ref = attributes_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        attributes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string attributes = 15;</code>
     * @param value The attributes to set.
     * @return This builder for chaining.
     */
    public Builder setAttributes(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      attributes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string attributes = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttributes() {
      
      attributes_ = getDefaultInstance().getAttributes();
      onChanged();
      return this;
    }
    /**
     * <code>string attributes = 15;</code>
     * @param value The bytes for attributes to set.
     * @return This builder for chaining.
     */
    public Builder setAttributesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      attributes_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object domainMatcher_ = "";
    /**
     * <code>string domain_matcher = 17;</code>
     * @return The domainMatcher.
     */
    public java.lang.String getDomainMatcher() {
      java.lang.Object ref = domainMatcher_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domainMatcher_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string domain_matcher = 17;</code>
     * @return The bytes for domainMatcher.
     */
    public com.google.protobuf.ByteString
        getDomainMatcherBytes() {
      java.lang.Object ref = domainMatcher_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domainMatcher_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string domain_matcher = 17;</code>
     * @param value The domainMatcher to set.
     * @return This builder for chaining.
     */
    public Builder setDomainMatcher(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      domainMatcher_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string domain_matcher = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearDomainMatcher() {
      
      domainMatcher_ = getDefaultInstance().getDomainMatcher();
      onChanged();
      return this;
    }
    /**
     * <code>string domain_matcher = 17;</code>
     * @param value The bytes for domainMatcher to set.
     * @return This builder for chaining.
     */
    public Builder setDomainMatcherBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      domainMatcher_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:v2ray.core.app.router.RoutingRule)
  }

  // @@protoc_insertion_point(class_scope:v2ray.core.app.router.RoutingRule)
  private static final com.v2ray.core.app.router.RoutingRule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.v2ray.core.app.router.RoutingRule();
  }

  public static com.v2ray.core.app.router.RoutingRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RoutingRule>
      PARSER = new com.google.protobuf.AbstractParser<RoutingRule>() {
    @java.lang.Override
    public RoutingRule parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RoutingRule> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RoutingRule> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.v2ray.core.app.router.RoutingRule getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

